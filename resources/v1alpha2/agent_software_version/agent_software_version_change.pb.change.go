// Code generated by protoc-gen-goten-resource
// Resource change: AgentSoftwareVersionChange
// DO NOT EDIT!!!

package agent_software_version

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
)

func (c *AgentSoftwareVersionChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AgentSoftwareVersionChange_Added_)
	return ok
}

func (c *AgentSoftwareVersionChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AgentSoftwareVersionChange_Modified_)
	return ok
}

func (c *AgentSoftwareVersionChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AgentSoftwareVersionChange_Current_)
	return ok
}

func (c *AgentSoftwareVersionChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AgentSoftwareVersionChange_Removed_)
	return ok
}

func (c *AgentSoftwareVersionChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AgentSoftwareVersionChange_Added_:
		return cType.Added.ViewIndex
	case *AgentSoftwareVersionChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *AgentSoftwareVersionChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AgentSoftwareVersionChange_Removed_:
		return cType.Removed.ViewIndex
	case *AgentSoftwareVersionChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *AgentSoftwareVersionChange) GetAgentSoftwareVersion() *AgentSoftwareVersion {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AgentSoftwareVersionChange_Added_:
		return cType.Added.AgentSoftwareVersion
	case *AgentSoftwareVersionChange_Modified_:
		return cType.Modified.AgentSoftwareVersion
	case *AgentSoftwareVersionChange_Current_:
		return cType.Current.AgentSoftwareVersion
	case *AgentSoftwareVersionChange_Removed_:
		return nil
	}
	return nil
}

func (c *AgentSoftwareVersionChange) GetRawResource() gotenresource.Resource {
	return c.GetAgentSoftwareVersion()
}

func (c *AgentSoftwareVersionChange) GetAgentSoftwareVersionName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AgentSoftwareVersionChange_Added_:
		return cType.Added.AgentSoftwareVersion.GetName()
	case *AgentSoftwareVersionChange_Modified_:
		return cType.Modified.Name
	case *AgentSoftwareVersionChange_Current_:
		return cType.Current.AgentSoftwareVersion.GetName()
	case *AgentSoftwareVersionChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *AgentSoftwareVersionChange) GetRawName() gotenresource.Name {
	return c.GetAgentSoftwareVersionName()
}

func (c *AgentSoftwareVersionChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &AgentSoftwareVersionChange_Added_{
		Added: &AgentSoftwareVersionChange_Added{
			AgentSoftwareVersion: snapshot.(*AgentSoftwareVersion),
			ViewIndex:            int32(idx),
		},
	}
}

func (c *AgentSoftwareVersionChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &AgentSoftwareVersionChange_Modified_{
		Modified: &AgentSoftwareVersionChange_Modified{
			Name:                 name.(*Name),
			AgentSoftwareVersion: snapshot.(*AgentSoftwareVersion),
			PreviousViewIndex:    int32(prevIdx),
			ViewIndex:            int32(newIdx),
		},
	}
}

func (c *AgentSoftwareVersionChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &AgentSoftwareVersionChange_Current_{
		Current: &AgentSoftwareVersionChange_Current{
			AgentSoftwareVersion: snapshot.(*AgentSoftwareVersion),
		},
	}
}

func (c *AgentSoftwareVersionChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &AgentSoftwareVersionChange_Removed_{
		Removed: &AgentSoftwareVersionChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
