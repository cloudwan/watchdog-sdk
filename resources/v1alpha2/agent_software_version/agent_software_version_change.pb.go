// Code generated by protoc-gen-goten-go
// File: watchdog/proto/v1alpha2/agent_software_version_change.proto
// DO NOT EDIT!!!

package agent_software_version

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AgentSoftwareVersionChange is used by Watch notifications Responses to
// describe change of single AgentSoftwareVersion One of Added, Modified,
// Removed
type AgentSoftwareVersionChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// AgentSoftwareVersion change
	//
	// Types that are valid to be assigned to ChangeType:
	//	*AgentSoftwareVersionChange_Added_
	//	*AgentSoftwareVersionChange_Modified_
	//	*AgentSoftwareVersionChange_Current_
	//	*AgentSoftwareVersionChange_Removed_
	ChangeType isAgentSoftwareVersionChange_ChangeType `protobuf_oneof:"change_type"`
}

func (m *AgentSoftwareVersionChange) Reset() {
	*m = AgentSoftwareVersionChange{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AgentSoftwareVersionChange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AgentSoftwareVersionChange) ProtoMessage() {}

func (m *AgentSoftwareVersionChange) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AgentSoftwareVersionChange) GotenMessage() {}

// Deprecated, Use AgentSoftwareVersionChange.ProtoReflect.Descriptor instead.
func (*AgentSoftwareVersionChange) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP(), []int{0}
}

func (m *AgentSoftwareVersionChange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AgentSoftwareVersionChange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AgentSoftwareVersionChange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AgentSoftwareVersionChange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isAgentSoftwareVersionChange_ChangeType interface {
	isAgentSoftwareVersionChange_ChangeType()
}

type AgentSoftwareVersionChange_Added_ struct {
	// Added is returned when watched document is added, either created or
	// enters Query view
	Added *AgentSoftwareVersionChange_Added `protobuf:"bytes,1,opt,name=added,proto3,oneof" firestore:"added"`
}
type AgentSoftwareVersionChange_Modified_ struct {
	// Modified is returned when watched document is modified
	Modified *AgentSoftwareVersionChange_Modified `protobuf:"bytes,2,opt,name=modified,proto3,oneof" firestore:"modified"`
}
type AgentSoftwareVersionChange_Current_ struct {
	// Current is returned in stateless watch when document enters query view or
	// is modified within.
	Current *AgentSoftwareVersionChange_Current `protobuf:"bytes,4,opt,name=current,proto3,oneof" firestore:"current"`
}
type AgentSoftwareVersionChange_Removed_ struct {
	// Removed is returned when AgentSoftwareVersion is deleted or leaves Query
	// view
	Removed *AgentSoftwareVersionChange_Removed `protobuf:"bytes,3,opt,name=removed,proto3,oneof" firestore:"removed"`
}

func (*AgentSoftwareVersionChange_Added_) isAgentSoftwareVersionChange_ChangeType()    {}
func (*AgentSoftwareVersionChange_Modified_) isAgentSoftwareVersionChange_ChangeType() {}
func (*AgentSoftwareVersionChange_Current_) isAgentSoftwareVersionChange_ChangeType()  {}
func (*AgentSoftwareVersionChange_Removed_) isAgentSoftwareVersionChange_ChangeType()  {}
func (m *AgentSoftwareVersionChange) GetChangeType() isAgentSoftwareVersionChange_ChangeType {
	if m != nil {
		return m.ChangeType
	}
	return nil
}
func (m *AgentSoftwareVersionChange) GetAdded() *AgentSoftwareVersionChange_Added {
	if x, ok := m.GetChangeType().(*AgentSoftwareVersionChange_Added_); ok {
		return x.Added
	}
	return nil
}
func (m *AgentSoftwareVersionChange) GetModified() *AgentSoftwareVersionChange_Modified {
	if x, ok := m.GetChangeType().(*AgentSoftwareVersionChange_Modified_); ok {
		return x.Modified
	}
	return nil
}
func (m *AgentSoftwareVersionChange) GetCurrent() *AgentSoftwareVersionChange_Current {
	if x, ok := m.GetChangeType().(*AgentSoftwareVersionChange_Current_); ok {
		return x.Current
	}
	return nil
}
func (m *AgentSoftwareVersionChange) GetRemoved() *AgentSoftwareVersionChange_Removed {
	if x, ok := m.GetChangeType().(*AgentSoftwareVersionChange_Removed_); ok {
		return x.Removed
	}
	return nil
}
func (m *AgentSoftwareVersionChange) SetChangeType(ofv isAgentSoftwareVersionChange_ChangeType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isAgentSoftwareVersionChange_ChangeType", "AgentSoftwareVersionChange"))
	}
	m.ChangeType = ofv
}
func (m *AgentSoftwareVersionChange) SetAdded(fv *AgentSoftwareVersionChange_Added) {
	m.SetChangeType(&AgentSoftwareVersionChange_Added_{Added: fv})
}
func (m *AgentSoftwareVersionChange) SetModified(fv *AgentSoftwareVersionChange_Modified) {
	m.SetChangeType(&AgentSoftwareVersionChange_Modified_{Modified: fv})
}
func (m *AgentSoftwareVersionChange) SetCurrent(fv *AgentSoftwareVersionChange_Current) {
	m.SetChangeType(&AgentSoftwareVersionChange_Current_{Current: fv})
}
func (m *AgentSoftwareVersionChange) SetRemoved(fv *AgentSoftwareVersionChange_Removed) {
	m.SetChangeType(&AgentSoftwareVersionChange_Removed_{Removed: fv})
}

// AgentSoftwareVersion has been added to query view
type AgentSoftwareVersionChange_Added struct {
	state                protoimpl.MessageState
	sizeCache            protoimpl.SizeCache
	unknownFields        protoimpl.UnknownFields
	AgentSoftwareVersion *AgentSoftwareVersion `protobuf:"bytes,1,opt,name=agent_software_version,json=agentSoftwareVersion,proto3" json:"agent_software_version,omitempty" firestore:"agentSoftwareVersion"`
	// Integer describing index of added AgentSoftwareVersion in resulting query
	// view.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *AgentSoftwareVersionChange_Added) Reset() {
	*m = AgentSoftwareVersionChange_Added{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AgentSoftwareVersionChange_Added) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AgentSoftwareVersionChange_Added) ProtoMessage() {}

func (m *AgentSoftwareVersionChange_Added) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AgentSoftwareVersionChange_Added) GotenMessage() {}

// Deprecated, Use AgentSoftwareVersionChange_Added.ProtoReflect.Descriptor instead.
func (*AgentSoftwareVersionChange_Added) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP(), []int{0, 0}
}

func (m *AgentSoftwareVersionChange_Added) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AgentSoftwareVersionChange_Added) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Added) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Added) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AgentSoftwareVersionChange_Added) GetAgentSoftwareVersion() *AgentSoftwareVersion {
	if m != nil {
		return m.AgentSoftwareVersion
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Added) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *AgentSoftwareVersionChange_Added) SetAgentSoftwareVersion(fv *AgentSoftwareVersion) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AgentSoftwareVersion", "AgentSoftwareVersionChange_Added"))
	}
	m.AgentSoftwareVersion = fv
}

func (m *AgentSoftwareVersionChange_Added) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "AgentSoftwareVersionChange_Added"))
	}
	m.ViewIndex = fv
}

// AgentSoftwareVersion changed some of it's fields - contains either full
// document or masked change
type AgentSoftwareVersionChange_Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of modified AgentSoftwareVersion
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// New version of AgentSoftwareVersion or masked difference, depending on
	// mask_changes instrumentation of issued [WatchAgentSoftwareVersionRequest]
	// or [WatchAgentSoftwareVersionsRequest]
	AgentSoftwareVersion *AgentSoftwareVersion `protobuf:"bytes,2,opt,name=agent_software_version,json=agentSoftwareVersion,proto3" json:"agent_software_version,omitempty" firestore:"agentSoftwareVersion"`
	// Used when mask_changes is set, contains field paths of modified
	// properties.
	FieldMask *AgentSoftwareVersion_FieldMask `protobuf:"bytes,3,opt,customtype=AgentSoftwareVersion_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty" firestore:"fieldMask"`
	// Previous view index specifies previous position of modified
	// AgentSoftwareVersion. When modification doesn't affect sorted order,
	// value will remain identical to [view_index].
	PreviousViewIndex int32 `protobuf:"varint,4,opt,name=previous_view_index,json=previousViewIndex,proto3" json:"previous_view_index,omitempty" firestore:"previousViewIndex"`
	// Integer specifying AgentSoftwareVersion new index in resulting query
	// view.
	ViewIndex int32 `protobuf:"varint,5,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *AgentSoftwareVersionChange_Modified) Reset() {
	*m = AgentSoftwareVersionChange_Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AgentSoftwareVersionChange_Modified) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AgentSoftwareVersionChange_Modified) ProtoMessage() {}

func (m *AgentSoftwareVersionChange_Modified) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AgentSoftwareVersionChange_Modified) GotenMessage() {}

// Deprecated, Use AgentSoftwareVersionChange_Modified.ProtoReflect.Descriptor instead.
func (*AgentSoftwareVersionChange_Modified) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP(), []int{0, 1}
}

func (m *AgentSoftwareVersionChange_Modified) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AgentSoftwareVersionChange_Modified) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Modified) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Modified) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AgentSoftwareVersionChange_Modified) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Modified) GetAgentSoftwareVersion() *AgentSoftwareVersion {
	if m != nil {
		return m.AgentSoftwareVersion
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Modified) GetFieldMask() *AgentSoftwareVersion_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Modified) GetPreviousViewIndex() int32 {
	if m != nil {
		return m.PreviousViewIndex
	}
	return int32(0)
}

func (m *AgentSoftwareVersionChange_Modified) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *AgentSoftwareVersionChange_Modified) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "AgentSoftwareVersionChange_Modified"))
	}
	m.Name = fv
}

func (m *AgentSoftwareVersionChange_Modified) SetAgentSoftwareVersion(fv *AgentSoftwareVersion) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AgentSoftwareVersion", "AgentSoftwareVersionChange_Modified"))
	}
	m.AgentSoftwareVersion = fv
}

func (m *AgentSoftwareVersionChange_Modified) SetFieldMask(fv *AgentSoftwareVersion_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "AgentSoftwareVersionChange_Modified"))
	}
	m.FieldMask = fv
}

func (m *AgentSoftwareVersionChange_Modified) SetPreviousViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PreviousViewIndex", "AgentSoftwareVersionChange_Modified"))
	}
	m.PreviousViewIndex = fv
}

func (m *AgentSoftwareVersionChange_Modified) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "AgentSoftwareVersionChange_Modified"))
	}
	m.ViewIndex = fv
}

// AgentSoftwareVersion has been added or modified in a query view. Version
// used for stateless watching
type AgentSoftwareVersionChange_Current struct {
	state                protoimpl.MessageState
	sizeCache            protoimpl.SizeCache
	unknownFields        protoimpl.UnknownFields
	AgentSoftwareVersion *AgentSoftwareVersion `protobuf:"bytes,1,opt,name=agent_software_version,json=agentSoftwareVersion,proto3" json:"agent_software_version,omitempty" firestore:"agentSoftwareVersion"`
}

func (m *AgentSoftwareVersionChange_Current) Reset() {
	*m = AgentSoftwareVersionChange_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AgentSoftwareVersionChange_Current) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AgentSoftwareVersionChange_Current) ProtoMessage() {}

func (m *AgentSoftwareVersionChange_Current) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AgentSoftwareVersionChange_Current) GotenMessage() {}

// Deprecated, Use AgentSoftwareVersionChange_Current.ProtoReflect.Descriptor instead.
func (*AgentSoftwareVersionChange_Current) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP(), []int{0, 2}
}

func (m *AgentSoftwareVersionChange_Current) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AgentSoftwareVersionChange_Current) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Current) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Current) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AgentSoftwareVersionChange_Current) GetAgentSoftwareVersion() *AgentSoftwareVersion {
	if m != nil {
		return m.AgentSoftwareVersion
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Current) SetAgentSoftwareVersion(fv *AgentSoftwareVersion) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AgentSoftwareVersion", "AgentSoftwareVersionChange_Current"))
	}
	m.AgentSoftwareVersion = fv
}

// Removed is returned when AgentSoftwareVersion is deleted or leaves Query
// view
type AgentSoftwareVersionChange_Removed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Integer specifying removed AgentSoftwareVersion index. Not populated in
	// stateless watch type.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *AgentSoftwareVersionChange_Removed) Reset() {
	*m = AgentSoftwareVersionChange_Removed{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AgentSoftwareVersionChange_Removed) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AgentSoftwareVersionChange_Removed) ProtoMessage() {}

func (m *AgentSoftwareVersionChange_Removed) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AgentSoftwareVersionChange_Removed) GotenMessage() {}

// Deprecated, Use AgentSoftwareVersionChange_Removed.ProtoReflect.Descriptor instead.
func (*AgentSoftwareVersionChange_Removed) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP(), []int{0, 3}
}

func (m *AgentSoftwareVersionChange_Removed) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AgentSoftwareVersionChange_Removed) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Removed) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AgentSoftwareVersionChange_Removed) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AgentSoftwareVersionChange_Removed) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AgentSoftwareVersionChange_Removed) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *AgentSoftwareVersionChange_Removed) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "AgentSoftwareVersionChange_Removed"))
	}
	m.Name = fv
}

func (m *AgentSoftwareVersionChange_Removed) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "AgentSoftwareVersionChange_Removed"))
	}
	m.ViewIndex = fv
}

var watchdog_proto_v1alpha2_agent_software_version_change_proto preflect.FileDescriptor

var watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e,
	0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x34, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x08, 0x0a, 0x1a, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x55, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x1a, 0x89, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x16, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xc7, 0x02, 0x0a,
	0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xb2, 0xda, 0x21, 0x18, 0x0a, 0x16, 0x0a,
	0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57,
	0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x1c,
	0xb2, 0xda, 0x21, 0x18, 0x32, 0x16, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x69,
	0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x6c, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x61, 0x0a, 0x16, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x5a, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xb2,
	0xda, 0x21, 0x18, 0x0a, 0x16, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x3a, 0x1a, 0x9a, 0xd9, 0x21, 0x16, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0xa4, 0x01, 0xe8, 0xde,
	0x21, 0x00, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x64, 0x6f, 0x67, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x42, 0x1f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x00, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f,
	0x67, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescOnce sync.Once
	watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescData = watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDesc
)

func watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescGZIP() []byte {
	watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescOnce.Do(func() {
		watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescData = protoimpl.X.CompressGZIP(watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescData)
	})
	return watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDescData
}

var watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var watchdog_proto_v1alpha2_agent_software_version_change_proto_goTypes = []interface{}{
	(*AgentSoftwareVersionChange)(nil),          // 0: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange
	(*AgentSoftwareVersionChange_Added)(nil),    // 1: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Added
	(*AgentSoftwareVersionChange_Modified)(nil), // 2: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Modified
	(*AgentSoftwareVersionChange_Current)(nil),  // 3: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Current
	(*AgentSoftwareVersionChange_Removed)(nil),  // 4: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Removed
	(*AgentSoftwareVersion)(nil),                // 5: ntt.watchdog.v1alpha2.AgentSoftwareVersion
	(*AgentSoftwareVersion_FieldMask)(nil),      // 6: ntt.watchdog.v1alpha2.AgentSoftwareVersion_FieldMask
}
var watchdog_proto_v1alpha2_agent_software_version_change_proto_depIdxs = []int32{
	1, // 0: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.added:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Added
	2, // 1: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.modified:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Modified
	3, // 2: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.current:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Current
	4, // 3: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.removed:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Removed
	5, // 4: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Added.agent_software_version:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersion
	5, // 5: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Modified.agent_software_version:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersion
	6, // 6: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Modified.field_mask:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersion_FieldMask
	5, // 7: ntt.watchdog.v1alpha2.AgentSoftwareVersionChange.Current.agent_software_version:type_name -> ntt.watchdog.v1alpha2.AgentSoftwareVersion
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { watchdog_proto_v1alpha2_agent_software_version_change_proto_init() }
func watchdog_proto_v1alpha2_agent_software_version_change_proto_init() {
	if watchdog_proto_v1alpha2_agent_software_version_change_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSoftwareVersionChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSoftwareVersionChange_Added); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSoftwareVersionChange_Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSoftwareVersionChange_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSoftwareVersionChange_Removed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AgentSoftwareVersionChange_Added_)(nil),
		(*AgentSoftwareVersionChange_Modified_)(nil),
		(*AgentSoftwareVersionChange_Current_)(nil),
		(*AgentSoftwareVersionChange_Removed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           watchdog_proto_v1alpha2_agent_software_version_change_proto_goTypes,
		DependencyIndexes: watchdog_proto_v1alpha2_agent_software_version_change_proto_depIdxs,
		MessageInfos:      watchdog_proto_v1alpha2_agent_software_version_change_proto_msgTypes,
	}.Build()
	watchdog_proto_v1alpha2_agent_software_version_change_proto = out.File
	watchdog_proto_v1alpha2_agent_software_version_change_proto_rawDesc = nil
	watchdog_proto_v1alpha2_agent_software_version_change_proto_goTypes = nil
	watchdog_proto_v1alpha2_agent_software_version_change_proto_depIdxs = nil
}
