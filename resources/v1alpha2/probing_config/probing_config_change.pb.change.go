// Code generated by protoc-gen-goten-resource
// Resource change: ProbingConfigChange
// DO NOT EDIT!!!

package probing_config

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
	_ = &project.Project{}
)

func (c *ProbingConfigChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProbingConfigChange_Added_)
	return ok
}

func (c *ProbingConfigChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProbingConfigChange_Modified_)
	return ok
}

func (c *ProbingConfigChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProbingConfigChange_Current_)
	return ok
}

func (c *ProbingConfigChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProbingConfigChange_Removed_)
	return ok
}

func (c *ProbingConfigChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *ProbingConfigChange_Added_:
		return cType.Added.ViewIndex
	case *ProbingConfigChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *ProbingConfigChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *ProbingConfigChange_Removed_:
		return cType.Removed.ViewIndex
	case *ProbingConfigChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *ProbingConfigChange) GetProbingConfig() *ProbingConfig {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *ProbingConfigChange_Added_:
		return cType.Added.ProbingConfig
	case *ProbingConfigChange_Modified_:
		return cType.Modified.ProbingConfig
	case *ProbingConfigChange_Current_:
		return cType.Current.ProbingConfig
	case *ProbingConfigChange_Removed_:
		return nil
	}
	return nil
}

func (c *ProbingConfigChange) GetRawResource() gotenresource.Resource {
	return c.GetProbingConfig()
}

func (c *ProbingConfigChange) GetProbingConfigName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *ProbingConfigChange_Added_:
		return cType.Added.ProbingConfig.GetName()
	case *ProbingConfigChange_Modified_:
		return cType.Modified.Name
	case *ProbingConfigChange_Current_:
		return cType.Current.ProbingConfig.GetName()
	case *ProbingConfigChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *ProbingConfigChange) GetRawName() gotenresource.Name {
	return c.GetProbingConfigName()
}

func (c *ProbingConfigChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &ProbingConfigChange_Added_{
		Added: &ProbingConfigChange_Added{
			ProbingConfig: snapshot.(*ProbingConfig),
			ViewIndex:     int32(idx),
		},
	}
}

func (c *ProbingConfigChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &ProbingConfigChange_Modified_{
		Modified: &ProbingConfigChange_Modified{
			Name:              name.(*Name),
			ProbingConfig:     snapshot.(*ProbingConfig),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *ProbingConfigChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &ProbingConfigChange_Current_{
		Current: &ProbingConfigChange_Current{
			ProbingConfig: snapshot.(*ProbingConfig),
		},
	}
}

func (c *ProbingConfigChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &ProbingConfigChange_Removed_{
		Removed: &ProbingConfigChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
