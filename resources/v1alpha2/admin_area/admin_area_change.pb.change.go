// Code generated by protoc-gen-goten-resource
// Resource change: AdminAreaChange
// DO NOT EDIT!!!

package admin_area

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
)

func (c *AdminAreaChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AdminAreaChange_Added_)
	return ok
}

func (c *AdminAreaChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AdminAreaChange_Modified_)
	return ok
}

func (c *AdminAreaChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AdminAreaChange_Current_)
	return ok
}

func (c *AdminAreaChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AdminAreaChange_Removed_)
	return ok
}

func (c *AdminAreaChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AdminAreaChange_Added_:
		return cType.Added.ViewIndex
	case *AdminAreaChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *AdminAreaChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AdminAreaChange_Removed_:
		return cType.Removed.ViewIndex
	case *AdminAreaChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *AdminAreaChange) GetAdminArea() *AdminArea {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AdminAreaChange_Added_:
		return cType.Added.AdminArea
	case *AdminAreaChange_Modified_:
		return cType.Modified.AdminArea
	case *AdminAreaChange_Current_:
		return cType.Current.AdminArea
	case *AdminAreaChange_Removed_:
		return nil
	}
	return nil
}

func (c *AdminAreaChange) GetResource() gotenresource.Resource {
	return c.GetAdminArea()
}

func (c *AdminAreaChange) GetAdminAreaName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AdminAreaChange_Added_:
		return cType.Added.AdminArea.GetName()
	case *AdminAreaChange_Modified_:
		return cType.Modified.Name
	case *AdminAreaChange_Current_:
		return cType.Current.AdminArea.GetName()
	case *AdminAreaChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *AdminAreaChange) GetRawName() gotenresource.Name {
	return c.GetAdminAreaName()
}

func (c *AdminAreaChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &AdminAreaChange_Added_{
		Added: &AdminAreaChange_Added{
			AdminArea: snapshot.(*AdminArea),
			ViewIndex: int32(idx),
		},
	}
}

func (c *AdminAreaChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &AdminAreaChange_Modified_{
		Modified: &AdminAreaChange_Modified{
			Name:              name.(*Name),
			AdminArea:         snapshot.(*AdminArea),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *AdminAreaChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &AdminAreaChange_Current_{
		Current: &AdminAreaChange_Current{
			AdminArea: snapshot.(*AdminArea),
		},
	}
}

func (c *AdminAreaChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &AdminAreaChange_Removed_{
		Removed: &AdminAreaChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
