// Code generated by protoc-gen-goten-resource
// Resource change: InternetQualityRatingChange
// DO NOT EDIT!!!

package internet_quality_rating

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
	_ = &probe.Probe{}
)

func (c *InternetQualityRatingChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*InternetQualityRatingChange_Added_)
	return ok
}

func (c *InternetQualityRatingChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*InternetQualityRatingChange_Modified_)
	return ok
}

func (c *InternetQualityRatingChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*InternetQualityRatingChange_Current_)
	return ok
}

func (c *InternetQualityRatingChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*InternetQualityRatingChange_Removed_)
	return ok
}

func (c *InternetQualityRatingChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *InternetQualityRatingChange_Added_:
		return cType.Added.ViewIndex
	case *InternetQualityRatingChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *InternetQualityRatingChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *InternetQualityRatingChange_Removed_:
		return cType.Removed.ViewIndex
	case *InternetQualityRatingChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *InternetQualityRatingChange) GetInternetQualityRating() *InternetQualityRating {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *InternetQualityRatingChange_Added_:
		return cType.Added.InternetQualityRating
	case *InternetQualityRatingChange_Modified_:
		return cType.Modified.InternetQualityRating
	case *InternetQualityRatingChange_Current_:
		return cType.Current.InternetQualityRating
	case *InternetQualityRatingChange_Removed_:
		return nil
	}
	return nil
}

func (c *InternetQualityRatingChange) GetResource() gotenresource.Resource {
	return c.GetInternetQualityRating()
}

func (c *InternetQualityRatingChange) GetInternetQualityRatingName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *InternetQualityRatingChange_Added_:
		return cType.Added.InternetQualityRating.GetName()
	case *InternetQualityRatingChange_Modified_:
		return cType.Modified.Name
	case *InternetQualityRatingChange_Current_:
		return cType.Current.InternetQualityRating.GetName()
	case *InternetQualityRatingChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *InternetQualityRatingChange) GetRawName() gotenresource.Name {
	return c.GetInternetQualityRatingName()
}

func (c *InternetQualityRatingChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &InternetQualityRatingChange_Added_{
		Added: &InternetQualityRatingChange_Added{
			InternetQualityRating: snapshot.(*InternetQualityRating),
			ViewIndex:             int32(idx),
		},
	}
}

func (c *InternetQualityRatingChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &InternetQualityRatingChange_Modified_{
		Modified: &InternetQualityRatingChange_Modified{
			Name:                  name.(*Name),
			InternetQualityRating: snapshot.(*InternetQualityRating),
			PreviousViewIndex:     int32(prevIdx),
			ViewIndex:             int32(newIdx),
		},
	}
}

func (c *InternetQualityRatingChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &InternetQualityRatingChange_Current_{
		Current: &InternetQualityRatingChange_Current{
			InternetQualityRating: snapshot.(*InternetQualityRating),
		},
	}
}

func (c *InternetQualityRatingChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &InternetQualityRatingChange_Removed_{
		Removed: &InternetQualityRatingChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
