// Code generated by protoc-gen-goten-go
// File: watchdog/proto/v1alpha/admin_area.proto
// DO NOT EDIT!!!

package admin_area

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &latlng.LatLng{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminArea_Type int32

const (
	AdminArea_TYPE_UNSPECIFIED AdminArea_Type = 0
	AdminArea_CONTINENT        AdminArea_Type = 1
	AdminArea_COUNTRY          AdminArea_Type = 2
	AdminArea_ADMIN1           AdminArea_Type = 3
	AdminArea_ADMIN2           AdminArea_Type = 4
	AdminArea_ADMIN3           AdminArea_Type = 5
	AdminArea_ADMIN4           AdminArea_Type = 6
	AdminArea_ADMIN5           AdminArea_Type = 7
)

var (
	AdminArea_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "CONTINENT",
		2: "COUNTRY",
		3: "ADMIN1",
		4: "ADMIN2",
		5: "ADMIN3",
		6: "ADMIN4",
		7: "ADMIN5",
	}

	AdminArea_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"CONTINENT":        1,
		"COUNTRY":          2,
		"ADMIN1":           3,
		"ADMIN2":           4,
		"ADMIN3":           5,
		"ADMIN4":           6,
		"ADMIN5":           7,
	}
)

func (x AdminArea_Type) Enum() *AdminArea_Type {
	p := new(AdminArea_Type)
	*p = x
	return p
}

func (x AdminArea_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (AdminArea_Type) Descriptor() preflect.EnumDescriptor {
	return watchdog_proto_v1alpha_admin_area_proto_enumTypes[0].Descriptor()
}

func (AdminArea_Type) Type() preflect.EnumType {
	return &watchdog_proto_v1alpha_admin_area_proto_enumTypes[0]
}

func (x AdminArea_Type) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use AdminArea_Type.ProtoReflect.Descriptor instead.
func (AdminArea_Type) EnumDescriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP(), []int{3, 0}
}

type BBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	SouthWest     *latlng.LatLng `protobuf:"bytes,1,opt,name=south_west,json=southWest,proto3" json:"south_west,omitempty" firestore:"southWest"`
	NorthEast     *latlng.LatLng `protobuf:"bytes,2,opt,name=north_east,json=northEast,proto3" json:"north_east,omitempty" firestore:"northEast"`
}

func (m *BBox) Reset() {
	*m = BBox{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *BBox) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*BBox) ProtoMessage() {}

func (m *BBox) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*BBox) GotenMessage() {}

// Deprecated, Use BBox.ProtoReflect.Descriptor instead.
func (*BBox) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP(), []int{0}
}

func (m *BBox) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *BBox) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *BBox) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *BBox) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *BBox) GetSouthWest() *latlng.LatLng {
	if m != nil {
		return m.SouthWest
	}
	return nil
}

func (m *BBox) GetNorthEast() *latlng.LatLng {
	if m != nil {
		return m.NorthEast
	}
	return nil
}

func (m *BBox) SetSouthWest(fv *latlng.LatLng) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SouthWest", "BBox"))
	}
	m.SouthWest = fv
}

func (m *BBox) SetNorthEast(fv *latlng.LatLng) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "NorthEast", "BBox"))
	}
	m.NorthEast = fv
}

type Geometry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Center        *latlng.LatLng `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty" firestore:"center"`
	Bbox          *BBox          `protobuf:"bytes,2,opt,name=bbox,proto3" json:"bbox,omitempty" firestore:"bbox"`
}

func (m *Geometry) Reset() {
	*m = Geometry{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *Geometry) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*Geometry) ProtoMessage() {}

func (m *Geometry) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*Geometry) GotenMessage() {}

// Deprecated, Use Geometry.ProtoReflect.Descriptor instead.
func (*Geometry) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP(), []int{1}
}

func (m *Geometry) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *Geometry) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *Geometry) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *Geometry) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *Geometry) GetCenter() *latlng.LatLng {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *Geometry) GetBbox() *BBox {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *Geometry) SetCenter(fv *latlng.LatLng) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Center", "Geometry"))
	}
	m.Center = fv
}

func (m *Geometry) SetBbox(fv *BBox) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Bbox", "Geometry"))
	}
	m.Bbox = fv
}

type AdminHierarchy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Continent     *Reference `protobuf:"bytes,1,opt,customtype=Reference,name=continent,proto3" json:"continent,omitempty" firestore:"continent"`
	Country       *Reference `protobuf:"bytes,2,opt,customtype=Reference,name=country,proto3" json:"country,omitempty" firestore:"country"`
	Admin1        *Reference `protobuf:"bytes,3,opt,customtype=Reference,name=admin1,proto3" json:"admin1,omitempty" firestore:"admin1"`
	Admin2        *Reference `protobuf:"bytes,4,opt,customtype=Reference,name=admin2,proto3" json:"admin2,omitempty" firestore:"admin2"`
	Admin3        *Reference `protobuf:"bytes,5,opt,customtype=Reference,name=admin3,proto3" json:"admin3,omitempty" firestore:"admin3"`
	Admin4        *Reference `protobuf:"bytes,6,opt,customtype=Reference,name=admin4,proto3" json:"admin4,omitempty" firestore:"admin4"`
	Admin5        *Reference `protobuf:"bytes,7,opt,customtype=Reference,name=admin5,proto3" json:"admin5,omitempty" firestore:"admin5"`
}

func (m *AdminHierarchy) Reset() {
	*m = AdminHierarchy{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AdminHierarchy) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AdminHierarchy) ProtoMessage() {}

func (m *AdminHierarchy) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AdminHierarchy) GotenMessage() {}

// Deprecated, Use AdminHierarchy.ProtoReflect.Descriptor instead.
func (*AdminHierarchy) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP(), []int{2}
}

func (m *AdminHierarchy) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AdminHierarchy) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AdminHierarchy) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AdminHierarchy) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AdminHierarchy) GetContinent() *Reference {
	if m != nil {
		return m.Continent
	}
	return nil
}

func (m *AdminHierarchy) GetCountry() *Reference {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *AdminHierarchy) GetAdmin1() *Reference {
	if m != nil {
		return m.Admin1
	}
	return nil
}

func (m *AdminHierarchy) GetAdmin2() *Reference {
	if m != nil {
		return m.Admin2
	}
	return nil
}

func (m *AdminHierarchy) GetAdmin3() *Reference {
	if m != nil {
		return m.Admin3
	}
	return nil
}

func (m *AdminHierarchy) GetAdmin4() *Reference {
	if m != nil {
		return m.Admin4
	}
	return nil
}

func (m *AdminHierarchy) GetAdmin5() *Reference {
	if m != nil {
		return m.Admin5
	}
	return nil
}

func (m *AdminHierarchy) SetContinent(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Continent", "AdminHierarchy"))
	}
	m.Continent = fv
}

func (m *AdminHierarchy) SetCountry(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Country", "AdminHierarchy"))
	}
	m.Country = fv
}

func (m *AdminHierarchy) SetAdmin1(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Admin1", "AdminHierarchy"))
	}
	m.Admin1 = fv
}

func (m *AdminHierarchy) SetAdmin2(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Admin2", "AdminHierarchy"))
	}
	m.Admin2 = fv
}

func (m *AdminHierarchy) SetAdmin3(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Admin3", "AdminHierarchy"))
	}
	m.Admin3 = fv
}

func (m *AdminHierarchy) SetAdmin4(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Admin4", "AdminHierarchy"))
	}
	m.Admin4 = fv
}

func (m *AdminHierarchy) SetAdmin5(fv *Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Admin5", "AdminHierarchy"))
	}
	m.Admin5 = fv
}

// AdminArea Resource
type AdminArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of AdminArea - uses stringified feature id
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Display Name, e.g. United States
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty" firestore:"displayName"`
	// hierarchy is populated with parent areas
	Hierarchy *AdminHierarchy `protobuf:"bytes,3,opt,name=hierarchy,proto3" json:"hierarchy,omitempty" firestore:"hierarchy"`
	// Admin Area type
	Type AdminArea_Type `protobuf:"varint,4,opt,name=type,proto3,enum=ntt.watchdog.v1alpha.AdminArea_Type" json:"type,omitempty" firestore:"type"`
	// Label geometry - optional, but when present it's better to use it, rather
	// than geometry.
	LabelGeometry *Geometry `protobuf:"bytes,5,opt,name=label_geometry,json=labelGeometry,proto3" json:"label_geometry,omitempty" firestore:"labelGeometry"`
	// Geometry - center and bounding box
	Geometry *Geometry `protobuf:"bytes,6,opt,name=geometry,proto3" json:"geometry,omitempty" firestore:"geometry"`
	// Metadata
	Metadata *ntt_meta.Meta `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty" firestore:"metadata"`
	// Local names in some languages
	// - key: language code in the iso-639-3 format
	// - value: a name in the local language
	LocalLanguageNames map[string]string `protobuf:"bytes,8,rep,name=local_language_names,json=localLanguageNames,proto3" json:"local_language_names,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"localLanguageNames"`
}

func (m *AdminArea) Reset() {
	*m = AdminArea{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AdminArea) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AdminArea) ProtoMessage() {}

func (m *AdminArea) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha_admin_area_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AdminArea) GotenMessage() {}

// Deprecated, Use AdminArea.ProtoReflect.Descriptor instead.
func (*AdminArea) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP(), []int{3}
}

func (m *AdminArea) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AdminArea) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AdminArea) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AdminArea) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AdminArea) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AdminArea) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AdminArea) GetHierarchy() *AdminHierarchy {
	if m != nil {
		return m.Hierarchy
	}
	return nil
}

func (m *AdminArea) GetType() AdminArea_Type {
	if m != nil {
		return m.Type
	}
	return AdminArea_TYPE_UNSPECIFIED
}

func (m *AdminArea) GetLabelGeometry() *Geometry {
	if m != nil {
		return m.LabelGeometry
	}
	return nil
}

func (m *AdminArea) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *AdminArea) GetMetadata() *ntt_meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *AdminArea) GetLocalLanguageNames() map[string]string {
	if m != nil {
		return m.LocalLanguageNames
	}
	return nil
}

func (m *AdminArea) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "AdminArea"))
	}
	m.Name = fv
}

func (m *AdminArea) SetDisplayName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DisplayName", "AdminArea"))
	}
	m.DisplayName = fv
}

func (m *AdminArea) SetHierarchy(fv *AdminHierarchy) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Hierarchy", "AdminArea"))
	}
	m.Hierarchy = fv
}

func (m *AdminArea) SetType(fv AdminArea_Type) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Type", "AdminArea"))
	}
	m.Type = fv
}

func (m *AdminArea) SetLabelGeometry(fv *Geometry) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "LabelGeometry", "AdminArea"))
	}
	m.LabelGeometry = fv
}

func (m *AdminArea) SetGeometry(fv *Geometry) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Geometry", "AdminArea"))
	}
	m.Geometry = fv
}

func (m *AdminArea) SetMetadata(fv *ntt_meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "AdminArea"))
	}
	m.Metadata = fv
}

func (m *AdminArea) SetLocalLanguageNames(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "LocalLanguageNames", "AdminArea"))
	}
	m.LocalLanguageNames = fv
}

var watchdog_proto_v1alpha_admin_area_proto preflect.FileDescriptor

var watchdog_proto_v1alpha_admin_area_proto_rawDesc = []byte{
	0x0a, 0x27, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6e, 0x74, 0x74, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x6c, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65,
	0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7a, 0x0a, 0x04, 0x42, 0x42, 0x6f, 0x78, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x5f, 0x77, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e,
	0x67, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x57, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x5f, 0x65, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c,
	0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x09, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x45, 0x61, 0x73, 0x74,
	0x3a, 0x0a, 0xfa, 0xde, 0x21, 0x06, 0x0a, 0x04, 0x42, 0x42, 0x6f, 0x78, 0x22, 0x77, 0x0a, 0x08,
	0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x06, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x62, 0x6f, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x42, 0x6f, 0x78, 0x52,
	0x04, 0x62, 0x62, 0x6f, 0x78, 0x3a, 0x0e, 0xfa, 0xde, 0x21, 0x0a, 0x0a, 0x08, 0x47, 0x65, 0x6f,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0xe9, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xb2, 0xda, 0x21,
	0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xb2, 0xda,
	0x21, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10,
	0x03, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xb2, 0xda, 0x21, 0x0f,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10, 0x03, 0x52,
	0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x31, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xb2, 0xda, 0x21, 0x0f, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10, 0x03, 0x52, 0x06, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x32, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x33, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xb2, 0xda, 0x21, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10, 0x03, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x33, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0xb2, 0xda, 0x21, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x72, 0x65, 0x61, 0x10, 0x03, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x34, 0x12, 0x2b,
	0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xb2, 0xda, 0x21, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65,
	0x61, 0x10, 0x03, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x35, 0x3a, 0x14, 0xfa, 0xde, 0x21,
	0x10, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x22, 0x90, 0x07, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2,
	0xda, 0x21, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x68, 0x69, 0x65,
	0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63,
	0x68, 0x79, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x12, 0x38, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x3a,
	0x0a, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x1a, 0x45, 0x0a, 0x17, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x74, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x49,
	0x4e, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x31, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x32, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x33, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x34, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x35, 0x10, 0x07, 0x3a,
	0xe2, 0x01, 0xea, 0x41, 0x38, 0x0a, 0x1d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x2f, 0x7b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x7d, 0x92, 0xd9, 0x21,
	0x25, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x0a, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x73, 0x22, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x5a,
	0x05, 0x10, 0x0a, 0x18, 0xe8, 0x07, 0xfa, 0xde, 0x21, 0x0b, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x72, 0x65, 0x61, 0xda, 0x94, 0x23, 0x08, 0x12, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0xc2, 0x85, 0x2c, 0x5f, 0x22, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61,
	0x72, 0x63, 0x68, 0x79, 0x22, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x08, 0x67, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x22, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0xb7, 0x03, 0xe8, 0xde, 0x21, 0x01, 0xd2, 0xff, 0xd0, 0x02, 0x49,
	0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x92, 0x8c, 0xd1, 0x02, 0x53, 0x0a, 0x15,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x64, 0x6f, 0x67, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x64, 0x6f, 0x67, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x3b, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0xd2, 0x84, 0xd1, 0x02, 0x43, 0x0a, 0x0d, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x80,
	0xd1, 0x02, 0x4b, 0x0a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x64, 0x6f, 0x67, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	watchdog_proto_v1alpha_admin_area_proto_rawDescOnce sync.Once
	watchdog_proto_v1alpha_admin_area_proto_rawDescData = watchdog_proto_v1alpha_admin_area_proto_rawDesc
)

func watchdog_proto_v1alpha_admin_area_proto_rawDescGZIP() []byte {
	watchdog_proto_v1alpha_admin_area_proto_rawDescOnce.Do(func() {
		watchdog_proto_v1alpha_admin_area_proto_rawDescData = protoimpl.X.CompressGZIP(watchdog_proto_v1alpha_admin_area_proto_rawDescData)
	})
	return watchdog_proto_v1alpha_admin_area_proto_rawDescData
}

var watchdog_proto_v1alpha_admin_area_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var watchdog_proto_v1alpha_admin_area_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var watchdog_proto_v1alpha_admin_area_proto_goTypes = []interface{}{
	(AdminArea_Type)(0),    // 0: ntt.watchdog.v1alpha.AdminArea_Type
	(*BBox)(nil),           // 1: ntt.watchdog.v1alpha.BBox
	(*Geometry)(nil),       // 2: ntt.watchdog.v1alpha.Geometry
	(*AdminHierarchy)(nil), // 3: ntt.watchdog.v1alpha.AdminHierarchy
	(*AdminArea)(nil),      // 4: ntt.watchdog.v1alpha.AdminArea
	nil,                    // 5: ntt.watchdog.v1alpha.AdminArea.LocalLanguageNamesEntry
	(*latlng.LatLng)(nil),  // 6: google.type.LatLng
	(*ntt_meta.Meta)(nil),  // 7: ntt.types.Meta
}
var watchdog_proto_v1alpha_admin_area_proto_depIdxs = []int32{
	6,  // 0: ntt.watchdog.v1alpha.BBox.south_west:type_name -> google.type.LatLng
	6,  // 1: ntt.watchdog.v1alpha.BBox.north_east:type_name -> google.type.LatLng
	6,  // 2: ntt.watchdog.v1alpha.Geometry.center:type_name -> google.type.LatLng
	1,  // 3: ntt.watchdog.v1alpha.Geometry.bbox:type_name -> ntt.watchdog.v1alpha.BBox
	3,  // 4: ntt.watchdog.v1alpha.AdminArea.hierarchy:type_name -> ntt.watchdog.v1alpha.AdminHierarchy
	0,  // 5: ntt.watchdog.v1alpha.AdminArea.type:type_name -> ntt.watchdog.v1alpha.AdminArea_Type
	2,  // 6: ntt.watchdog.v1alpha.AdminArea.label_geometry:type_name -> ntt.watchdog.v1alpha.Geometry
	2,  // 7: ntt.watchdog.v1alpha.AdminArea.geometry:type_name -> ntt.watchdog.v1alpha.Geometry
	7,  // 8: ntt.watchdog.v1alpha.AdminArea.metadata:type_name -> ntt.types.Meta
	5,  // 9: ntt.watchdog.v1alpha.AdminArea.local_language_names:type_name -> ntt.watchdog.v1alpha.AdminArea.LocalLanguageNamesEntry
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { watchdog_proto_v1alpha_admin_area_proto_init() }
func watchdog_proto_v1alpha_admin_area_proto_init() {
	if watchdog_proto_v1alpha_admin_area_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		watchdog_proto_v1alpha_admin_area_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha_admin_area_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geometry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha_admin_area_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminHierarchy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha_admin_area_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: watchdog_proto_v1alpha_admin_area_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           watchdog_proto_v1alpha_admin_area_proto_goTypes,
		DependencyIndexes: watchdog_proto_v1alpha_admin_area_proto_depIdxs,
		EnumInfos:         watchdog_proto_v1alpha_admin_area_proto_enumTypes,
		MessageInfos:      watchdog_proto_v1alpha_admin_area_proto_msgTypes,
	}.Build()
	watchdog_proto_v1alpha_admin_area_proto = out.File
	watchdog_proto_v1alpha_admin_area_proto_rawDesc = nil
	watchdog_proto_v1alpha_admin_area_proto_goTypes = nil
	watchdog_proto_v1alpha_admin_area_proto_depIdxs = nil
}
