syntax = "proto3";

package ntt.watchdog.v1alpha;

import "edgelq-sdk/iam/proto/v1alpha2/condition.proto";

import "edgelq-sdk/iam/proto/v1alpha2/permission.proto";

import "google/api/annotations.proto";

import "google/api/client.proto";

import "google/protobuf/empty.proto";

import "google/protobuf/field_mask.proto";

import "goten-sdk/runtime/api/view.proto";

import "goten-sdk/runtime/api/watch_type.proto";

import "watchdog-sdk/proto/v1alpha/geo_resolver_custom.proto";

import "watchdog-sdk/proto/v1alpha/probe.proto";

import "watchdog-sdk/proto/v1alpha/probe_change.proto";

option java_multiple_files = false;

option go_package = "github.com/cloudwan/watchdog-sdk/client/v1alpha/geo_resolver;geo_resolver_client";

option java_package = "com.ntt.watchdog.pb.v1alpha";

option java_outer_classname = "GeoResolverServiceProto";

// GeoResolver service API for Watchdog
service GeoResolverService {
  option (google.api.default_host) = "watchdog.edgelq.com";

  option (google.api.oauth_scopes) = "https://apis.edgelq.com";

  // ResolveGeoIP
  rpc ResolveGeoIP(ResolveGeoIPRequest) returns (ResolveGeoIPResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=projects/*/probes/*}:resolveGeoIP"
    };
  }

  // BulkResolveGeoIP
  rpc BulkResolveGeoIP(BulkResolveGeoIPRequest)
      returns (BulkResolveGeoIPResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=projects/*/probes/*}:bulkResolveGeoIP"
    };
  }

  // ResolveEnvironment
  rpc ResolveEnvironment(ResolveEnvironmentRequest)
      returns (ResolveEnvironmentResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=projects/*/probes/*}:resolveEnvironment"
    };
  }
}
