syntax = "proto3";

package ntt.watchdog.v1alpha2;

import "edgelq-sdk/monitoring/proto/v3/common.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "watchdog-sdk/proto/v1alpha2/common.proto";
import "watchdog-sdk/proto/v1alpha2/probe.proto";
import "watchdog-sdk/proto/v1alpha2/probe_change.proto";

option go_package = "github.com/cloudwan/watchdog-sdk/client/v1alpha2/hop_monitor;hop_monitor_client";
option java_multiple_files = false;
option java_outer_classname = "HopMonitorCustomProto";
option java_package = "com.ntt.watchdog.pb.v1alpha2";

// Request message for method
// [RunHopMonitor][ntt.watchdog.v1alpha2.RunHopMonitor]
message RunHopMonitorRequest {
  //  reference of ntt.watchdog.v1alpha2.Probe
  string name = 1;

  // Run path trace to the specified probing target.
  // Target or Destination is required as user input.
  string target = 3;

  // Destination to send packet to.
  // IP address and domain name are accepted.
  // One of Destination or Target is required as input
  string destination = 4;

  // Number of attempts to discover unique paths. Default is 3
  int32 attempts = 6;

  // Use UDP (default) or TCP or ICMP for the path discovery
  ProbingMode mode = 7;

  // Default is Text format similar to traceroute command. Json is for internal
  // use only
  OnDemandTestResponseFormat output_format = 8;

  reserved 2, 5;
}

// Response message for method
// [RunHopMonitor][ntt.watchdog.v1alpha2.RunHopMonitor]
message RunHopMonitorResponse {
  // Json format is not preferred for the ondemand tests
  JsonResponse json_response = 1;

  // Console type text response
  string text_response = 2;

  // Json format is not preferred for the ondemand tests
  message JsonResponse {
    // List of various paths that are discovered
    repeated Path paths = 1;

    // Stats for each hop
    map<string, HopStat> hop_stats = 2;

    // Metadata information for each hop
    map<string, HopInfo> hop_info = 3;

    // IP Version for the destination
    IpVersion ip_version = 4;
  }
}
