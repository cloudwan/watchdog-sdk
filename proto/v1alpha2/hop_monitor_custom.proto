syntax = "proto3";

package ntt.watchdog.v1alpha2;

import "edgelq-sdk/meta/compilers/annotations/multi_region.proto";
import "edgelq-sdk/monitoring/proto/v3/common.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "watchdog-sdk/proto/v1alpha2/common.proto";
import "watchdog-sdk/proto/v1alpha2/probe.proto";
import "watchdog-sdk/proto/v1alpha2/probe_change.proto";

option go_package = "github.com/cloudwan/watchdog-sdk/client/v1alpha2/hop_monitor;hop_monitor_client";
option java_multiple_files = false;
option java_outer_classname = "HopMonitorCustomProto";
option java_package = "com.ntt.watchdog.pb.v1alpha2";

// Request message for method
// [RunHopMonitor][ntt.watchdog.v1alpha2.RunHopMonitor]
message RunHopMonitorRequest {
  //  reference of ntt.watchdog.v1alpha2.Probe
  string name = 1;

  // Source address to listen packet
  // Skip validating goten's ip format
  // in order to accept a zone index for IPv6 link local address
  // ex. fe80::3%eth0
  //
  // If unspecified, agent will pick :: or 0.0.0.0 by default
  // The IP version is chosen according to the version of destination address
  string source = 2;

  // Target or Destination is required as user input
  string target = 3;

  // Destination to send packet
  // IP address and hostname are acceptable
  // As the IPv6 address, a zone index is also acceptable
  // Destination or Target is required from user
  string destination = 4;

  // Byte size of the payload
  // If unspecified, 100 is picked by default
  // The minimum length includes space for timestamp and a tracker
  int32 size_bytes = 5;

  // Number of attempts to discover unique paths
  int32 attempts = 6;

  ProbingMode mode = 7;
}

// Response message for method
// [RunHopMonitor][ntt.watchdog.v1alpha2.RunHopMonitor]
message RunHopMonitorResponse {
  repeated Path paths = 1;

  map<string, HopStat> hop_stats = 2;

  map<string, HopInfo> hop_info = 3;

  IpVersion ip_version = 4;
}
