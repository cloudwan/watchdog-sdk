syntax = "proto3";

package ntt.watchdog.v1alpha2;

import "edgelq-sdk/meta/compilers/annotations/multi_region.proto";
import "google/protobuf/duration.proto";
import "watchdog-sdk/proto/v1alpha2/probe.proto";
import "watchdog-sdk/proto/v1alpha2/probe_change.proto";

option go_package = "github.com/cloudwan/watchdog-sdk/client/v1alpha2/ping_test;ping_test_client";
option java_multiple_files = false;
option java_outer_classname = "PingTestCustomProto";
option java_package = "com.ntt.watchdog.pb.v1alpha2";

// Request message for method [RunPingTest][ntt.watchdog.v1alpha2.RunPingTest]
// NOTE: copy watchdogagent/api/proto/v1alpha/ping_test_custom.proto and
// increment field numbers Source address to listen packet Skip validating
message RunPingTestRequest {
  //  reference of ntt.watchdog.v1alpha2.Probe
  string name = 1;

  // Source address to listen packet
  // Skip validating goten's ip format
  // in order to accept a zone index for IPv6 link local address
  // ex. fe80::3%eth0
  //
  // If unspecified, agent will pick :: or 0.0.0.0 by default
  // The IP version is chosen according to the version of destination address
  string source = 2;

  // Destination to send packet
  // IP address and hostname are acceptable
  // As the IPv6 address, a zone index is also acceptable
  string destination = 3;

  // Byte size of the ICMP payload
  // If unspecified, 100 is picked by default
  //
  // The minimum length is 2 bytes
  // The head 2 bytes body is used to embed a request ID
  // Because ICMP Echo identifier field is not editable
  // in Linux unprivileged ICMP endpoint
  int32 size_bytes = 4;

  // Number of ICMP Echo requests in the test
  // If unspecified, 3 is picked by default
  int32 count = 5;

  // Interval duration to wait sending each packet
  // If unspecified, 1.0s is picked
  google.protobuf.Duration interval = 6;

  // Timeout duration to wait receiving each packet's reply
  // If unspecified, 1.0s is picked
  google.protobuf.Duration echo_timeout = 7;

  // DF flag in IPv4 header
  // If unspecified or false spcified, skip manipulating packet
  bool dont_fragment = 8;

  // TTL in IPv4 or hop limit in IPv6
  // If unspecified, skip manipulating packet
  // In the case, the value depends on the running OS
  int32 ttl = 9;

  // TOS in IPv4 or traffic class in IPv6
  // If unspecified, skip manipulating packet
  int32 tos = 10;
}

// Response message for method [RunPingTest][ntt.watchdog.v1alpha2.RunPingTest]
message RunPingTestResponse {
  // IP address
  string from = 1;

  // Byte size of the ICMP payload
  int32 size_bytes = 2;

  // Sequence number field
  int32 sequence_number = 3;

  int32 ttl = 4;

  google.protobuf.Duration rtt = 5;

  // Error message
  string error = 6;

  SummaryStats summary = 7;

  // Summary statistics accompanies each response
  // It summarizes the results at that time
  message SummaryStats {
    google.protobuf.Duration min_rtt = 1;

    google.protobuf.Duration avg_rtt = 2;

    google.protobuf.Duration max_rtt = 3;

    google.protobuf.Duration stddev_rtt = 4;

    int32 transmitted_counter = 5;

    int32 received_counter = 6;

    // Percent
    double loss_ratio = 7;
  }
}

message RunPingTestRequestToProbe {
  string source = 1;

  string destination = 2;

  int32 size_bytes = 3;

  int32 count = 4;

  google.protobuf.Duration interval = 5;

  google.protobuf.Duration echo_timeout = 6;

  bool dont_fragment = 7;

  int32 ttl = 8;

  int32 tos = 9;
}
