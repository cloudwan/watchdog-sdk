// Code generated by protoc-gen-goten-object
// File: watchdog/proto/v1alpha2/http_test_custom.proto
// DO NOT EDIT!!!

package http_test_client

// proto imports
import (
	ntt_memo "github.com/cloudwan/edgelq-sdk/common/types/memo"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	devices_device "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/device"
	devices_project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	iam_attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	iam_service_account "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/service_account"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	admin_area "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/admin_area"
	common "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/common"
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	probe_group "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe_group"
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_memo.Memo{}
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &devices_device.Device{}
	_ = &devices_project.Project{}
	_ = &iam_attestation_domain.AttestationDomain{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &iam_service_account.ServiceAccount{}
	_ = &meta_service.Service{}
	_ = &duration.Duration{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = &wrappers.DoubleValue{}
	_ = &latlng.LatLng{}
	_ = &admin_area.BBox{}
	_ = &common.SoftwareVersion{}
	_ = &probe.Probe{}
	_ = &probe_group.ProbeGroup{}
	_ = &project.Project{}
)

type RunHTTPTestRequestFieldPathBuilder struct{}

func NewRunHTTPTestRequestFieldPathBuilder() RunHTTPTestRequestFieldPathBuilder {
	return RunHTTPTestRequestFieldPathBuilder{}
}
func (RunHTTPTestRequestFieldPathBuilder) Name() RunHTTPTestRequestPathSelectorName {
	return RunHTTPTestRequestPathSelectorName{}
}
func (RunHTTPTestRequestFieldPathBuilder) Url() RunHTTPTestRequestPathSelectorUrl {
	return RunHTTPTestRequestPathSelectorUrl{}
}
func (RunHTTPTestRequestFieldPathBuilder) RequestHeaders() RunHTTPTestRequestPathSelectorRequestHeaders {
	return RunHTTPTestRequestPathSelectorRequestHeaders{}
}
func (RunHTTPTestRequestFieldPathBuilder) RequestMethod() RunHTTPTestRequestPathSelectorRequestMethod {
	return RunHTTPTestRequestPathSelectorRequestMethod{}
}
func (RunHTTPTestRequestFieldPathBuilder) Timeout() RunHTTPTestRequestPathSelectorTimeout {
	return RunHTTPTestRequestPathSelectorTimeout{}
}
func (RunHTTPTestRequestFieldPathBuilder) RequestBody() RunHTTPTestRequestPathSelectorRequestBody {
	return RunHTTPTestRequestPathSelectorRequestBody{}
}
func (RunHTTPTestRequestFieldPathBuilder) AuthenticationMethod() RunHTTPTestRequestPathSelectorAuthenticationMethod {
	return RunHTTPTestRequestPathSelectorAuthenticationMethod{}
}
func (RunHTTPTestRequestFieldPathBuilder) Username() RunHTTPTestRequestPathSelectorUsername {
	return RunHTTPTestRequestPathSelectorUsername{}
}
func (RunHTTPTestRequestFieldPathBuilder) Password() RunHTTPTestRequestPathSelectorPassword {
	return RunHTTPTestRequestPathSelectorPassword{}
}
func (RunHTTPTestRequestFieldPathBuilder) SourceIp() RunHTTPTestRequestPathSelectorSourceIp {
	return RunHTTPTestRequestPathSelectorSourceIp{}
}
func (RunHTTPTestRequestFieldPathBuilder) OutputFormat() RunHTTPTestRequestPathSelectorOutputFormat {
	return RunHTTPTestRequestPathSelectorOutputFormat{}
}
func (RunHTTPTestRequestFieldPathBuilder) IpVersion() RunHTTPTestRequestPathSelectorIpVersion {
	return RunHTTPTestRequestPathSelectorIpVersion{}
}

type RunHTTPTestRequestPathSelectorName struct{}

func (RunHTTPTestRequestPathSelectorName) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorName}
}

func (s RunHTTPTestRequestPathSelectorName) WithValue(value *probe.Reference) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorName) WithArrayOfValues(values []*probe.Reference) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorUrl struct{}

func (RunHTTPTestRequestPathSelectorUrl) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorUrl}
}

func (s RunHTTPTestRequestPathSelectorUrl) WithValue(value string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorUrl) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorRequestHeaders struct{}

func (RunHTTPTestRequestPathSelectorRequestHeaders) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorRequestHeaders}
}

func (s RunHTTPTestRequestPathSelectorRequestHeaders) WithValue(value map[string]string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorRequestHeaders) WithArrayOfValues(values []map[string]string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

func (RunHTTPTestRequestPathSelectorRequestHeaders) WithKey(key string) RunHTTPTestRequestMapPathSelectorRequestHeaders {
	return RunHTTPTestRequestMapPathSelectorRequestHeaders{key: key}
}

type RunHTTPTestRequestMapPathSelectorRequestHeaders struct {
	key string
}

func (s RunHTTPTestRequestMapPathSelectorRequestHeaders) FieldPath() *RunHTTPTestRequest_FieldPathMap {
	return &RunHTTPTestRequest_FieldPathMap{selector: RunHTTPTestRequest_FieldPathSelectorRequestHeaders, key: s.key}
}

func (s RunHTTPTestRequestMapPathSelectorRequestHeaders) WithValue(value string) *RunHTTPTestRequest_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldPathMapValue)
}

func (s RunHTTPTestRequestMapPathSelectorRequestHeaders) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldPathMapArrayOfValues)
}

type RunHTTPTestRequestPathSelectorRequestMethod struct{}

func (RunHTTPTestRequestPathSelectorRequestMethod) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorRequestMethod}
}

func (s RunHTTPTestRequestPathSelectorRequestMethod) WithValue(value common.HTTPRequestMethod) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorRequestMethod) WithArrayOfValues(values []common.HTTPRequestMethod) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorTimeout struct{}

func (RunHTTPTestRequestPathSelectorTimeout) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorTimeout}
}

func (s RunHTTPTestRequestPathSelectorTimeout) WithValue(value *duration.Duration) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorTimeout) WithArrayOfValues(values []*duration.Duration) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorRequestBody struct{}

func (RunHTTPTestRequestPathSelectorRequestBody) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorRequestBody}
}

func (s RunHTTPTestRequestPathSelectorRequestBody) WithValue(value string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorRequestBody) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorAuthenticationMethod struct{}

func (RunHTTPTestRequestPathSelectorAuthenticationMethod) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorAuthenticationMethod}
}

func (s RunHTTPTestRequestPathSelectorAuthenticationMethod) WithValue(value common.AuthenticationMethod) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorAuthenticationMethod) WithArrayOfValues(values []common.AuthenticationMethod) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorUsername struct{}

func (RunHTTPTestRequestPathSelectorUsername) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorUsername}
}

func (s RunHTTPTestRequestPathSelectorUsername) WithValue(value string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorUsername) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorPassword struct{}

func (RunHTTPTestRequestPathSelectorPassword) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorPassword}
}

func (s RunHTTPTestRequestPathSelectorPassword) WithValue(value string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorPassword) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorSourceIp struct{}

func (RunHTTPTestRequestPathSelectorSourceIp) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorSourceIp}
}

func (s RunHTTPTestRequestPathSelectorSourceIp) WithValue(value string) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorSourceIp) WithArrayOfValues(values []string) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorOutputFormat struct{}

func (RunHTTPTestRequestPathSelectorOutputFormat) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorOutputFormat}
}

func (s RunHTTPTestRequestPathSelectorOutputFormat) WithValue(value common.OnDemandTestResponseFormat) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorOutputFormat) WithArrayOfValues(values []common.OnDemandTestResponseFormat) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestRequestPathSelectorIpVersion struct{}

func (RunHTTPTestRequestPathSelectorIpVersion) FieldPath() *RunHTTPTestRequest_FieldTerminalPath {
	return &RunHTTPTestRequest_FieldTerminalPath{selector: RunHTTPTestRequest_FieldPathSelectorIpVersion}
}

func (s RunHTTPTestRequestPathSelectorIpVersion) WithValue(value common.IpVersion) *RunHTTPTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestRequest_FieldTerminalPathValue)
}

func (s RunHTTPTestRequestPathSelectorIpVersion) WithArrayOfValues(values []common.IpVersion) *RunHTTPTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestRequest_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestResponseFieldPathBuilder struct{}

func NewRunHTTPTestResponseFieldPathBuilder() RunHTTPTestResponseFieldPathBuilder {
	return RunHTTPTestResponseFieldPathBuilder{}
}
func (RunHTTPTestResponseFieldPathBuilder) TextResponse() RunHTTPTestResponsePathSelectorTextResponse {
	return RunHTTPTestResponsePathSelectorTextResponse{}
}
func (RunHTTPTestResponseFieldPathBuilder) JsonResponse() RunHTTPTestResponsePathSelectorJsonResponse {
	return RunHTTPTestResponsePathSelectorJsonResponse{}
}

type RunHTTPTestResponsePathSelectorTextResponse struct{}

func (RunHTTPTestResponsePathSelectorTextResponse) FieldPath() *RunHTTPTestResponse_FieldTerminalPath {
	return &RunHTTPTestResponse_FieldTerminalPath{selector: RunHTTPTestResponse_FieldPathSelectorTextResponse}
}

func (s RunHTTPTestResponsePathSelectorTextResponse) WithValue(value string) *RunHTTPTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldTerminalPathValue)
}

func (s RunHTTPTestResponsePathSelectorTextResponse) WithArrayOfValues(values []string) *RunHTTPTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestResponsePathSelectorJsonResponse struct{}

func (RunHTTPTestResponsePathSelectorJsonResponse) FieldPath() *RunHTTPTestResponse_FieldTerminalPath {
	return &RunHTTPTestResponse_FieldTerminalPath{selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse}
}

func (s RunHTTPTestResponsePathSelectorJsonResponse) WithValue(value *RunHTTPTestResponse_JsonResponse) *RunHTTPTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldTerminalPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponse) WithArrayOfValues(values []*RunHTTPTestResponse_JsonResponse) *RunHTTPTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldTerminalPathArrayOfValues)
}

func (RunHTTPTestResponsePathSelectorJsonResponse) WithSubPath(subPath RunHTTPTestResponseJsonResponse_FieldPath) *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse, subPath: subPath}
}

func (s RunHTTPTestResponsePathSelectorJsonResponse) WithSubValue(subPathValue RunHTTPTestResponseJsonResponse_FieldPathValue) *RunHTTPTestResponse_FieldSubPathValue {
	return &RunHTTPTestResponse_FieldSubPathValue{RunHTTPTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunHTTPTestResponsePathSelectorJsonResponse) WithSubArrayOfValues(subPathArrayOfValues RunHTTPTestResponseJsonResponse_FieldPathArrayOfValues) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return &RunHTTPTestResponse_FieldSubPathArrayOfValues{RunHTTPTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunHTTPTestResponsePathSelectorJsonResponse) WithSubArrayItemValue(subPathArrayItemValue RunHTTPTestResponseJsonResponse_FieldPathArrayItemValue) *RunHTTPTestResponse_FieldSubPathArrayItemValue {
	return &RunHTTPTestResponse_FieldSubPathArrayItemValue{RunHTTPTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunHTTPTestResponsePathSelectorJsonResponse) ResponseCode() RunHTTPTestResponsePathSelectorJsonResponseResponseCode {
	return RunHTTPTestResponsePathSelectorJsonResponseResponseCode{}
}

func (RunHTTPTestResponsePathSelectorJsonResponse) ResponseHeaders() RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders {
	return RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders{}
}

func (RunHTTPTestResponsePathSelectorJsonResponse) ResponseBody() RunHTTPTestResponsePathSelectorJsonResponseResponseBody {
	return RunHTTPTestResponsePathSelectorJsonResponseResponseBody{}
}

type RunHTTPTestResponsePathSelectorJsonResponseResponseCode struct{}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseCode) FieldPath() *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{
		selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunHTTPTestResponseJsonResponseFieldPathBuilder().ResponseCode().FieldPath(),
	}
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseCode) WithValue(value int32) *RunHTTPTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseCode) WithArrayOfValues(values []int32) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldSubPathArrayOfValues)
}

type RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders struct{}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) FieldPath() *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{
		selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunHTTPTestResponseJsonResponseFieldPathBuilder().ResponseHeaders().FieldPath(),
	}
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) WithValue(value []*RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) WithArrayOfValues(values [][]*RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldSubPathArrayOfValues)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) WithItemValue(value *RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHTTPTestResponse_FieldSubPathArrayItemValue)
}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) Key() RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey {
	return RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey{}
}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseHeaders) Values() RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues {
	return RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues{}
}

type RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey struct{}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey) FieldPath() *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{
		selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunHTTPTestResponseJsonResponseFieldPathBuilder().ResponseHeaders().Key().FieldPath(),
	}
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey) WithValue(value string) *RunHTTPTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersKey) WithArrayOfValues(values []string) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldSubPathArrayOfValues)
}

type RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues struct{}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues) FieldPath() *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{
		selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunHTTPTestResponseJsonResponseFieldPathBuilder().ResponseHeaders().Values().FieldPath(),
	}
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues) WithValue(value []string) *RunHTTPTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues) WithArrayOfValues(values [][]string) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldSubPathArrayOfValues)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseHeadersValues) WithItemValue(value string) *RunHTTPTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHTTPTestResponse_FieldSubPathArrayItemValue)
}

type RunHTTPTestResponsePathSelectorJsonResponseResponseBody struct{}

func (RunHTTPTestResponsePathSelectorJsonResponseResponseBody) FieldPath() *RunHTTPTestResponse_FieldSubPath {
	return &RunHTTPTestResponse_FieldSubPath{
		selector: RunHTTPTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunHTTPTestResponseJsonResponseFieldPathBuilder().ResponseBody().FieldPath(),
	}
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseBody) WithValue(value []byte) *RunHTTPTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponsePathSelectorJsonResponseResponseBody) WithArrayOfValues(values [][]byte) *RunHTTPTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponse_FieldSubPathArrayOfValues)
}

type RunHTTPTestResponseJsonResponseFieldPathBuilder struct{}

func NewRunHTTPTestResponseJsonResponseFieldPathBuilder() RunHTTPTestResponseJsonResponseFieldPathBuilder {
	return RunHTTPTestResponseJsonResponseFieldPathBuilder{}
}
func (RunHTTPTestResponseJsonResponseFieldPathBuilder) ResponseCode() RunHTTPTestResponse_JsonResponsePathSelectorResponseCode {
	return RunHTTPTestResponse_JsonResponsePathSelectorResponseCode{}
}
func (RunHTTPTestResponseJsonResponseFieldPathBuilder) ResponseHeaders() RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders {
	return RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders{}
}
func (RunHTTPTestResponseJsonResponseFieldPathBuilder) ResponseBody() RunHTTPTestResponse_JsonResponsePathSelectorResponseBody {
	return RunHTTPTestResponse_JsonResponsePathSelectorResponseBody{}
}

type RunHTTPTestResponse_JsonResponsePathSelectorResponseCode struct{}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseCode) FieldPath() *RunHTTPTestResponseJsonResponse_FieldTerminalPath {
	return &RunHTTPTestResponseJsonResponse_FieldTerminalPath{selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseCode}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseCode) WithValue(value int32) *RunHTTPTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseCode) WithArrayOfValues(values []int32) *RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders struct{}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) FieldPath() *RunHTTPTestResponseJsonResponse_FieldTerminalPath {
	return &RunHTTPTestResponseJsonResponse_FieldTerminalPath{selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseHeaders}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithValue(value []*RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithArrayOfValues(values [][]*RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithItemValue(value *RunHTTPTestResponse_JsonResponse_Header) *RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}
func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithSubPath(subPath RunHTTPTestResponseJsonResponseHeader_FieldPath) *RunHTTPTestResponseJsonResponse_FieldSubPath {
	return &RunHTTPTestResponseJsonResponse_FieldSubPath{selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseHeaders, subPath: subPath}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithSubValue(subPathValue RunHTTPTestResponseJsonResponseHeader_FieldPathValue) *RunHTTPTestResponseJsonResponse_FieldSubPathValue {
	return &RunHTTPTestResponseJsonResponse_FieldSubPathValue{RunHTTPTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithSubArrayOfValues(subPathArrayOfValues RunHTTPTestResponseJsonResponseHeader_FieldPathArrayOfValues) *RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return &RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues{RunHTTPTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) WithSubArrayItemValue(subPathArrayItemValue RunHTTPTestResponseJsonResponseHeader_FieldPathArrayItemValue) *RunHTTPTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return &RunHTTPTestResponseJsonResponse_FieldSubPathArrayItemValue{RunHTTPTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) Key() RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey {
	return RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey{}
}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeaders) Values() RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues {
	return RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues{}
}

type RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey struct{}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey) FieldPath() *RunHTTPTestResponseJsonResponse_FieldSubPath {
	return &RunHTTPTestResponseJsonResponse_FieldSubPath{
		selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseHeaders,
		subPath:  NewRunHTTPTestResponseJsonResponseHeaderFieldPathBuilder().Key().FieldPath(),
	}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey) WithValue(value string) *RunHTTPTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersKey) WithArrayOfValues(values []string) *RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues struct{}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues) FieldPath() *RunHTTPTestResponseJsonResponse_FieldSubPath {
	return &RunHTTPTestResponseJsonResponse_FieldSubPath{
		selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseHeaders,
		subPath:  NewRunHTTPTestResponseJsonResponseHeaderFieldPathBuilder().Values().FieldPath(),
	}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues) WithValue(value []string) *RunHTTPTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues) WithArrayOfValues(values [][]string) *RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseHeadersValues) WithItemValue(value string) *RunHTTPTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHTTPTestResponseJsonResponse_FieldSubPathArrayItemValue)
}

type RunHTTPTestResponse_JsonResponsePathSelectorResponseBody struct{}

func (RunHTTPTestResponse_JsonResponsePathSelectorResponseBody) FieldPath() *RunHTTPTestResponseJsonResponse_FieldTerminalPath {
	return &RunHTTPTestResponseJsonResponse_FieldTerminalPath{selector: RunHTTPTestResponseJsonResponse_FieldPathSelectorResponseBody}
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseBody) WithValue(value []byte) *RunHTTPTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunHTTPTestResponse_JsonResponsePathSelectorResponseBody) WithArrayOfValues(values [][]byte) *RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestResponseJsonResponseHeaderFieldPathBuilder struct{}

func NewRunHTTPTestResponseJsonResponseHeaderFieldPathBuilder() RunHTTPTestResponseJsonResponseHeaderFieldPathBuilder {
	return RunHTTPTestResponseJsonResponseHeaderFieldPathBuilder{}
}
func (RunHTTPTestResponseJsonResponseHeaderFieldPathBuilder) Key() RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey {
	return RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey{}
}
func (RunHTTPTestResponseJsonResponseHeaderFieldPathBuilder) Values() RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues {
	return RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues{}
}

type RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey struct{}

func (RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey) FieldPath() *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPath {
	return &RunHTTPTestResponseJsonResponseHeader_FieldTerminalPath{selector: RunHTTPTestResponseJsonResponseHeader_FieldPathSelectorKey}
}

func (s RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey) WithValue(value string) *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathValue)
}

func (s RunHTTPTestResponse_JsonResponse_HeaderPathSelectorKey) WithArrayOfValues(values []string) *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayOfValues)
}

type RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues struct{}

func (RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues) FieldPath() *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPath {
	return &RunHTTPTestResponseJsonResponseHeader_FieldTerminalPath{selector: RunHTTPTestResponseJsonResponseHeader_FieldPathSelectorValues}
}

func (s RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues) WithValue(value []string) *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathValue)
}

func (s RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues) WithArrayOfValues(values [][]string) *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayOfValues)
}

func (s RunHTTPTestResponse_JsonResponse_HeaderPathSelectorValues) WithItemValue(value string) *RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHTTPTestResponseJsonResponseHeader_FieldTerminalPathArrayItemValue)
}
