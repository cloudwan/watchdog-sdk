// Code generated by protoc-gen-goten-object
// File: watchdog/proto/v1alpha2/hop_monitor_custom.proto
// DO NOT EDIT!!!

package hop_monitor_client

// proto imports
import (
	ntt_memo "github.com/cloudwan/edgelq-sdk/common/types/memo"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	devices_device "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/device"
	devices_project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	iam_attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	iam_service_account "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/service_account"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	admin_area "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/admin_area"
	common "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/common"
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	probe_group "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe_group"
	probing_target "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probing_target"
	probing_target_group "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probing_target_group"
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_memo.Memo{}
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &devices_device.Device{}
	_ = &devices_project.Project{}
	_ = &iam_attestation_domain.AttestationDomain{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &iam_service_account.ServiceAccount{}
	_ = &meta_service.Service{}
	_ = &duration.Duration{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = &wrappers.DoubleValue{}
	_ = &latlng.LatLng{}
	_ = &admin_area.BBox{}
	_ = &common.SoftwareVersion{}
	_ = &probe.Probe{}
	_ = &probe_group.ProbeGroup{}
	_ = &probing_target.ProbingTarget{}
	_ = &probing_target_group.ProbingTargetGroup{}
	_ = &project.Project{}
)

type RunHopMonitorRequestFieldPathBuilder struct{}

func NewRunHopMonitorRequestFieldPathBuilder() RunHopMonitorRequestFieldPathBuilder {
	return RunHopMonitorRequestFieldPathBuilder{}
}
func (RunHopMonitorRequestFieldPathBuilder) Name() RunHopMonitorRequestPathSelectorName {
	return RunHopMonitorRequestPathSelectorName{}
}
func (RunHopMonitorRequestFieldPathBuilder) Source() RunHopMonitorRequestPathSelectorSource {
	return RunHopMonitorRequestPathSelectorSource{}
}
func (RunHopMonitorRequestFieldPathBuilder) Target() RunHopMonitorRequestPathSelectorTarget {
	return RunHopMonitorRequestPathSelectorTarget{}
}
func (RunHopMonitorRequestFieldPathBuilder) Destination() RunHopMonitorRequestPathSelectorDestination {
	return RunHopMonitorRequestPathSelectorDestination{}
}
func (RunHopMonitorRequestFieldPathBuilder) SizeBytes() RunHopMonitorRequestPathSelectorSizeBytes {
	return RunHopMonitorRequestPathSelectorSizeBytes{}
}
func (RunHopMonitorRequestFieldPathBuilder) Attempts() RunHopMonitorRequestPathSelectorAttempts {
	return RunHopMonitorRequestPathSelectorAttempts{}
}
func (RunHopMonitorRequestFieldPathBuilder) Mode() RunHopMonitorRequestPathSelectorMode {
	return RunHopMonitorRequestPathSelectorMode{}
}

type RunHopMonitorRequestPathSelectorName struct{}

func (RunHopMonitorRequestPathSelectorName) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorName}
}

func (s RunHopMonitorRequestPathSelectorName) WithValue(value *probe.Reference) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorName) WithArrayOfValues(values []*probe.Reference) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorSource struct{}

func (RunHopMonitorRequestPathSelectorSource) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorSource}
}

func (s RunHopMonitorRequestPathSelectorSource) WithValue(value string) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorSource) WithArrayOfValues(values []string) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorTarget struct{}

func (RunHopMonitorRequestPathSelectorTarget) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorTarget}
}

func (s RunHopMonitorRequestPathSelectorTarget) WithValue(value *probing_target.Reference) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorTarget) WithArrayOfValues(values []*probing_target.Reference) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorDestination struct{}

func (RunHopMonitorRequestPathSelectorDestination) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorDestination}
}

func (s RunHopMonitorRequestPathSelectorDestination) WithValue(value string) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorDestination) WithArrayOfValues(values []string) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorSizeBytes struct{}

func (RunHopMonitorRequestPathSelectorSizeBytes) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorSizeBytes}
}

func (s RunHopMonitorRequestPathSelectorSizeBytes) WithValue(value int32) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorSizeBytes) WithArrayOfValues(values []int32) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorAttempts struct{}

func (RunHopMonitorRequestPathSelectorAttempts) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorAttempts}
}

func (s RunHopMonitorRequestPathSelectorAttempts) WithValue(value int32) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorAttempts) WithArrayOfValues(values []int32) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorRequestPathSelectorMode struct{}

func (RunHopMonitorRequestPathSelectorMode) FieldPath() *RunHopMonitorRequest_FieldTerminalPath {
	return &RunHopMonitorRequest_FieldTerminalPath{selector: RunHopMonitorRequest_FieldPathSelectorMode}
}

func (s RunHopMonitorRequestPathSelectorMode) WithValue(value common.ProbingMode) *RunHopMonitorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorRequest_FieldTerminalPathValue)
}

func (s RunHopMonitorRequestPathSelectorMode) WithArrayOfValues(values []common.ProbingMode) *RunHopMonitorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorRequest_FieldTerminalPathArrayOfValues)
}

type RunHopMonitorResponseFieldPathBuilder struct{}

func NewRunHopMonitorResponseFieldPathBuilder() RunHopMonitorResponseFieldPathBuilder {
	return RunHopMonitorResponseFieldPathBuilder{}
}
func (RunHopMonitorResponseFieldPathBuilder) Paths() RunHopMonitorResponsePathSelectorPaths {
	return RunHopMonitorResponsePathSelectorPaths{}
}
func (RunHopMonitorResponseFieldPathBuilder) HopStats() RunHopMonitorResponsePathSelectorHopStats {
	return RunHopMonitorResponsePathSelectorHopStats{}
}
func (RunHopMonitorResponseFieldPathBuilder) HopInfo() RunHopMonitorResponsePathSelectorHopInfo {
	return RunHopMonitorResponsePathSelectorHopInfo{}
}
func (RunHopMonitorResponseFieldPathBuilder) IpVersion() RunHopMonitorResponsePathSelectorIpVersion {
	return RunHopMonitorResponsePathSelectorIpVersion{}
}

type RunHopMonitorResponsePathSelectorPaths struct{}

func (RunHopMonitorResponsePathSelectorPaths) FieldPath() *RunHopMonitorResponse_FieldTerminalPath {
	return &RunHopMonitorResponse_FieldTerminalPath{selector: RunHopMonitorResponse_FieldPathSelectorPaths}
}

func (s RunHopMonitorResponsePathSelectorPaths) WithValue(value []*common.Path) *RunHopMonitorResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldTerminalPathValue)
}

func (s RunHopMonitorResponsePathSelectorPaths) WithArrayOfValues(values [][]*common.Path) *RunHopMonitorResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldTerminalPathArrayOfValues)
}

func (s RunHopMonitorResponsePathSelectorPaths) WithItemValue(value *common.Path) *RunHopMonitorResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHopMonitorResponse_FieldTerminalPathArrayItemValue)
}
func (RunHopMonitorResponsePathSelectorPaths) WithSubPath(subPath common.Path_FieldPath) *RunHopMonitorResponse_FieldSubPath {
	return &RunHopMonitorResponse_FieldSubPath{selector: RunHopMonitorResponse_FieldPathSelectorPaths, subPath: subPath}
}

func (s RunHopMonitorResponsePathSelectorPaths) WithSubValue(subPathValue common.Path_FieldPathValue) *RunHopMonitorResponse_FieldSubPathValue {
	return &RunHopMonitorResponse_FieldSubPathValue{RunHopMonitorResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunHopMonitorResponsePathSelectorPaths) WithSubArrayOfValues(subPathArrayOfValues common.Path_FieldPathArrayOfValues) *RunHopMonitorResponse_FieldSubPathArrayOfValues {
	return &RunHopMonitorResponse_FieldSubPathArrayOfValues{RunHopMonitorResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunHopMonitorResponsePathSelectorPaths) WithSubArrayItemValue(subPathArrayItemValue common.Path_FieldPathArrayItemValue) *RunHopMonitorResponse_FieldSubPathArrayItemValue {
	return &RunHopMonitorResponse_FieldSubPathArrayItemValue{RunHopMonitorResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunHopMonitorResponsePathSelectorPaths) Hops() RunHopMonitorResponsePathSelectorPathsHops {
	return RunHopMonitorResponsePathSelectorPathsHops{}
}

type RunHopMonitorResponsePathSelectorPathsHops struct{}

func (RunHopMonitorResponsePathSelectorPathsHops) FieldPath() *RunHopMonitorResponse_FieldSubPath {
	return &RunHopMonitorResponse_FieldSubPath{
		selector: RunHopMonitorResponse_FieldPathSelectorPaths,
		subPath:  common.NewPathFieldPathBuilder().Hops().FieldPath(),
	}
}

func (s RunHopMonitorResponsePathSelectorPathsHops) WithValue(value []string) *RunHopMonitorResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldSubPathValue)
}

func (s RunHopMonitorResponsePathSelectorPathsHops) WithArrayOfValues(values [][]string) *RunHopMonitorResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldSubPathArrayOfValues)
}

func (s RunHopMonitorResponsePathSelectorPathsHops) WithItemValue(value string) *RunHopMonitorResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunHopMonitorResponse_FieldSubPathArrayItemValue)
}

type RunHopMonitorResponsePathSelectorHopStats struct{}

func (RunHopMonitorResponsePathSelectorHopStats) FieldPath() *RunHopMonitorResponse_FieldTerminalPath {
	return &RunHopMonitorResponse_FieldTerminalPath{selector: RunHopMonitorResponse_FieldPathSelectorHopStats}
}

func (s RunHopMonitorResponsePathSelectorHopStats) WithValue(value map[string]*common.HopStat) *RunHopMonitorResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldTerminalPathValue)
}

func (s RunHopMonitorResponsePathSelectorHopStats) WithArrayOfValues(values []map[string]*common.HopStat) *RunHopMonitorResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldTerminalPathArrayOfValues)
}

func (RunHopMonitorResponsePathSelectorHopStats) WithKey(key string) RunHopMonitorResponseMapPathSelectorHopStats {
	return RunHopMonitorResponseMapPathSelectorHopStats{key: key}
}

type RunHopMonitorResponseMapPathSelectorHopStats struct {
	key string
}

func (s RunHopMonitorResponseMapPathSelectorHopStats) FieldPath() *RunHopMonitorResponse_FieldPathMap {
	return &RunHopMonitorResponse_FieldPathMap{selector: RunHopMonitorResponse_FieldPathSelectorHopStats, key: s.key}
}

func (s RunHopMonitorResponseMapPathSelectorHopStats) WithValue(value *common.HopStat) *RunHopMonitorResponse_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldPathMapValue)
}

func (s RunHopMonitorResponseMapPathSelectorHopStats) WithArrayOfValues(values []*common.HopStat) *RunHopMonitorResponse_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldPathMapArrayOfValues)
}

type RunHopMonitorResponsePathSelectorHopInfo struct{}

func (RunHopMonitorResponsePathSelectorHopInfo) FieldPath() *RunHopMonitorResponse_FieldTerminalPath {
	return &RunHopMonitorResponse_FieldTerminalPath{selector: RunHopMonitorResponse_FieldPathSelectorHopInfo}
}

func (s RunHopMonitorResponsePathSelectorHopInfo) WithValue(value map[string]*common.HopInfo) *RunHopMonitorResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldTerminalPathValue)
}

func (s RunHopMonitorResponsePathSelectorHopInfo) WithArrayOfValues(values []map[string]*common.HopInfo) *RunHopMonitorResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldTerminalPathArrayOfValues)
}

func (RunHopMonitorResponsePathSelectorHopInfo) WithKey(key string) RunHopMonitorResponseMapPathSelectorHopInfo {
	return RunHopMonitorResponseMapPathSelectorHopInfo{key: key}
}

type RunHopMonitorResponseMapPathSelectorHopInfo struct {
	key string
}

func (s RunHopMonitorResponseMapPathSelectorHopInfo) FieldPath() *RunHopMonitorResponse_FieldPathMap {
	return &RunHopMonitorResponse_FieldPathMap{selector: RunHopMonitorResponse_FieldPathSelectorHopInfo, key: s.key}
}

func (s RunHopMonitorResponseMapPathSelectorHopInfo) WithValue(value *common.HopInfo) *RunHopMonitorResponse_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldPathMapValue)
}

func (s RunHopMonitorResponseMapPathSelectorHopInfo) WithArrayOfValues(values []*common.HopInfo) *RunHopMonitorResponse_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldPathMapArrayOfValues)
}

type RunHopMonitorResponsePathSelectorIpVersion struct{}

func (RunHopMonitorResponsePathSelectorIpVersion) FieldPath() *RunHopMonitorResponse_FieldTerminalPath {
	return &RunHopMonitorResponse_FieldTerminalPath{selector: RunHopMonitorResponse_FieldPathSelectorIpVersion}
}

func (s RunHopMonitorResponsePathSelectorIpVersion) WithValue(value common.IpVersion) *RunHopMonitorResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunHopMonitorResponse_FieldTerminalPathValue)
}

func (s RunHopMonitorResponsePathSelectorIpVersion) WithArrayOfValues(values []common.IpVersion) *RunHopMonitorResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunHopMonitorResponse_FieldTerminalPathArrayOfValues)
}
