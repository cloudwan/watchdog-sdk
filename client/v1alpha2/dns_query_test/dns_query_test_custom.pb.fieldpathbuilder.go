// Code generated by protoc-gen-goten-object
// File: watchdog/proto/v1alpha2/dns_query_test_custom.proto
// DO NOT EDIT!!!

package dns_query_test_client

// proto imports
import (
	ntt_memo "github.com/cloudwan/edgelq-sdk/common/types/memo"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	devices_device "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/device"
	devices_project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	iam_attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_condition "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/condition"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_permission "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/permission"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	iam_role "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/role"
	iam_service_account "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/service_account"
	iam_user "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/user"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	admin_area "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/admin_area"
	common "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/common"
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	probe_group "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe_group"
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
	duration "github.com/golang/protobuf/ptypes/duration"
	structpb "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_memo.Memo{}
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &devices_device.Device{}
	_ = &devices_project.Project{}
	_ = &iam_attestation_domain.AttestationDomain{}
	_ = &iam_iam_common.Actor{}
	_ = &iam_condition.Condition{}
	_ = &iam_organization.Organization{}
	_ = &iam_permission.Permission{}
	_ = &iam_project.Project{}
	_ = &iam_role.Role{}
	_ = &iam_service_account.ServiceAccount{}
	_ = &iam_user.User{}
	_ = &meta_service.Service{}
	_ = &duration.Duration{}
	_ = &field_mask.FieldMask{}
	_ = &structpb.Struct{}
	_ = &timestamp.Timestamp{}
	_ = &wrappers.DoubleValue{}
	_ = &latlng.LatLng{}
	_ = &admin_area.BBox{}
	_ = &common.SoftwareVersion{}
	_ = &probe.Probe{}
	_ = &probe_group.ProbeGroup{}
	_ = &project.Project{}
)

type RunDNSQueryTestRequestFieldPathBuilder struct{}

func NewRunDNSQueryTestRequestFieldPathBuilder() RunDNSQueryTestRequestFieldPathBuilder {
	return RunDNSQueryTestRequestFieldPathBuilder{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Name() RunDNSQueryTestRequestPathSelectorName {
	return RunDNSQueryTestRequestPathSelectorName{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Query() RunDNSQueryTestRequestPathSelectorQuery {
	return RunDNSQueryTestRequestPathSelectorQuery{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Server() RunDNSQueryTestRequestPathSelectorServer {
	return RunDNSQueryTestRequestPathSelectorServer{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Port() RunDNSQueryTestRequestPathSelectorPort {
	return RunDNSQueryTestRequestPathSelectorPort{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Tcp() RunDNSQueryTestRequestPathSelectorTcp {
	return RunDNSQueryTestRequestPathSelectorTcp{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) NoRecursionDesired() RunDNSQueryTestRequestPathSelectorNoRecursionDesired {
	return RunDNSQueryTestRequestPathSelectorNoRecursionDesired{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Reverse() RunDNSQueryTestRequestPathSelectorReverse {
	return RunDNSQueryTestRequestPathSelectorReverse{}
}

type RunDNSQueryTestRequestPathSelectorName struct{}

func (RunDNSQueryTestRequestPathSelectorName) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorName}
}

func (s RunDNSQueryTestRequestPathSelectorName) WithValue(value *probe.Reference) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorName) WithArrayOfValues(values []*probe.Reference) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQuery struct{}

func (RunDNSQueryTestRequestPathSelectorQuery) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorQuery}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithValue(value *common.DNSQuery) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithArrayOfValues(values []*common.DNSQuery) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

func (RunDNSQueryTestRequestPathSelectorQuery) WithSubPath(subPath common.DNSQuery_FieldPath) *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{selector: RunDNSQueryTestRequest_FieldPathSelectorQuery, subPath: subPath}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubValue(subPathValue common.DNSQuery_FieldPathValue) *RunDNSQueryTestRequest_FieldSubPathValue {
	return &RunDNSQueryTestRequest_FieldSubPathValue{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubArrayOfValues(subPathArrayOfValues common.DNSQuery_FieldPathArrayOfValues) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestRequest_FieldSubPathArrayOfValues{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubArrayItemValue(subPathArrayItemValue common.DNSQuery_FieldPathArrayItemValue) *RunDNSQueryTestRequest_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestRequest_FieldSubPathArrayItemValue{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Name() RunDNSQueryTestRequestPathSelectorQueryName {
	return RunDNSQueryTestRequestPathSelectorQueryName{}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Qtype() RunDNSQueryTestRequestPathSelectorQueryQtype {
	return RunDNSQueryTestRequestPathSelectorQueryQtype{}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Qclass() RunDNSQueryTestRequestPathSelectorQueryQclass {
	return RunDNSQueryTestRequestPathSelectorQueryQclass{}
}

type RunDNSQueryTestRequestPathSelectorQueryName struct{}

func (RunDNSQueryTestRequestPathSelectorQueryName) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryName) WithValue(value string) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryName) WithArrayOfValues(values []string) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQueryQtype struct{}

func (RunDNSQueryTestRequestPathSelectorQueryQtype) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQueryQclass struct{}

func (RunDNSQueryTestRequestPathSelectorQueryQclass) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryQclass) WithValue(value common.DNSClass) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorServer struct{}

func (RunDNSQueryTestRequestPathSelectorServer) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorServer}
}

func (s RunDNSQueryTestRequestPathSelectorServer) WithValue(value string) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorServer) WithArrayOfValues(values []string) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorPort struct{}

func (RunDNSQueryTestRequestPathSelectorPort) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorPort}
}

func (s RunDNSQueryTestRequestPathSelectorPort) WithValue(value uint32) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorPort) WithArrayOfValues(values []uint32) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorTcp struct{}

func (RunDNSQueryTestRequestPathSelectorTcp) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorTcp}
}

func (s RunDNSQueryTestRequestPathSelectorTcp) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorTcp) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorNoRecursionDesired struct{}

func (RunDNSQueryTestRequestPathSelectorNoRecursionDesired) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorNoRecursionDesired}
}

func (s RunDNSQueryTestRequestPathSelectorNoRecursionDesired) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorNoRecursionDesired) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorReverse struct{}

func (RunDNSQueryTestRequestPathSelectorReverse) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorReverse}
}

func (s RunDNSQueryTestRequestPathSelectorReverse) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorReverse) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponseFieldPathBuilder struct{}

func NewRunDNSQueryTestResponseFieldPathBuilder() RunDNSQueryTestResponseFieldPathBuilder {
	return RunDNSQueryTestResponseFieldPathBuilder{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Id() RunDNSQueryTestResponsePathSelectorId {
	return RunDNSQueryTestResponsePathSelectorId{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Rcode() RunDNSQueryTestResponsePathSelectorRcode {
	return RunDNSQueryTestResponsePathSelectorRcode{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Flags() RunDNSQueryTestResponsePathSelectorFlags {
	return RunDNSQueryTestResponsePathSelectorFlags{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Queries() RunDNSQueryTestResponsePathSelectorQueries {
	return RunDNSQueryTestResponsePathSelectorQueries{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Answers() RunDNSQueryTestResponsePathSelectorAnswers {
	return RunDNSQueryTestResponsePathSelectorAnswers{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Ns() RunDNSQueryTestResponsePathSelectorNs {
	return RunDNSQueryTestResponsePathSelectorNs{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Extras() RunDNSQueryTestResponsePathSelectorExtras {
	return RunDNSQueryTestResponsePathSelectorExtras{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) Rtt() RunDNSQueryTestResponsePathSelectorRtt {
	return RunDNSQueryTestResponsePathSelectorRtt{}
}

type RunDNSQueryTestResponsePathSelectorId struct{}

func (RunDNSQueryTestResponsePathSelectorId) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorId}
}

func (s RunDNSQueryTestResponsePathSelectorId) WithValue(value uint32) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorId) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorRcode struct{}

func (RunDNSQueryTestResponsePathSelectorRcode) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorRcode}
}

func (s RunDNSQueryTestResponsePathSelectorRcode) WithValue(value string) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorRcode) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorFlags struct{}

func (RunDNSQueryTestResponsePathSelectorFlags) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorFlags}
}

func (s RunDNSQueryTestResponsePathSelectorFlags) WithValue(value []string) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorFlags) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorFlags) WithItemValue(value string) *RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorQueries struct{}

func (RunDNSQueryTestResponsePathSelectorQueries) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorQueries}
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithValue(value []*common.DNSQuery) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithArrayOfValues(values [][]*common.DNSQuery) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithItemValue(value *common.DNSQuery) *RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponsePathSelectorQueries) WithSubPath(subPath common.DNSQuery_FieldPath) *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{selector: RunDNSQueryTestResponse_FieldPathSelectorQueries, subPath: subPath}
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithSubValue(subPathValue common.DNSQuery_FieldPathValue) *RunDNSQueryTestResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponse_FieldSubPathValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithSubArrayOfValues(subPathArrayOfValues common.DNSQuery_FieldPathArrayOfValues) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponsePathSelectorQueries) WithSubArrayItemValue(subPathArrayItemValue common.DNSQuery_FieldPathArrayItemValue) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponsePathSelectorQueries) Name() RunDNSQueryTestResponsePathSelectorQueriesName {
	return RunDNSQueryTestResponsePathSelectorQueriesName{}
}

func (RunDNSQueryTestResponsePathSelectorQueries) Qtype() RunDNSQueryTestResponsePathSelectorQueriesQtype {
	return RunDNSQueryTestResponsePathSelectorQueriesQtype{}
}

func (RunDNSQueryTestResponsePathSelectorQueries) Qclass() RunDNSQueryTestResponsePathSelectorQueriesQclass {
	return RunDNSQueryTestResponsePathSelectorQueriesQclass{}
}

type RunDNSQueryTestResponsePathSelectorQueriesName struct{}

func (RunDNSQueryTestResponsePathSelectorQueriesName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorQueriesName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorQueriesName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorQueriesQtype struct{}

func (RunDNSQueryTestResponsePathSelectorQueriesQtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorQueriesQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorQueriesQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorQueriesQclass struct{}

func (RunDNSQueryTestResponsePathSelectorQueriesQclass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorQueriesQclass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorQueriesQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswers struct{}

func (RunDNSQueryTestResponsePathSelectorAnswers) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers}
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponsePathSelectorAnswers) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers, subPath: subPath}
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponse_FieldSubPathValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponsePathSelectorAnswers) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Name() RunDNSQueryTestResponsePathSelectorAnswersName {
	return RunDNSQueryTestResponsePathSelectorAnswersName{}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Rrtype() RunDNSQueryTestResponsePathSelectorAnswersRrtype {
	return RunDNSQueryTestResponsePathSelectorAnswersRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Class() RunDNSQueryTestResponsePathSelectorAnswersClass {
	return RunDNSQueryTestResponsePathSelectorAnswersClass{}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Ttl() RunDNSQueryTestResponsePathSelectorAnswersTtl {
	return RunDNSQueryTestResponsePathSelectorAnswersTtl{}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Rdlength() RunDNSQueryTestResponsePathSelectorAnswersRdlength {
	return RunDNSQueryTestResponsePathSelectorAnswersRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorAnswers) Rdata() RunDNSQueryTestResponsePathSelectorAnswersRdata {
	return RunDNSQueryTestResponsePathSelectorAnswersRdata{}
}

type RunDNSQueryTestResponsePathSelectorAnswersName struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswersRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswersClass struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswersTtl struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswersRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorAnswersRdata struct{}

func (RunDNSQueryTestResponsePathSelectorAnswersRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorAnswersRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorNs struct{}

func (RunDNSQueryTestResponsePathSelectorNs) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorNs}
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponsePathSelectorNs) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{selector: RunDNSQueryTestResponse_FieldPathSelectorNs, subPath: subPath}
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponse_FieldSubPathValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponsePathSelectorNs) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponsePathSelectorNs) Name() RunDNSQueryTestResponsePathSelectorNsName {
	return RunDNSQueryTestResponsePathSelectorNsName{}
}

func (RunDNSQueryTestResponsePathSelectorNs) Rrtype() RunDNSQueryTestResponsePathSelectorNsRrtype {
	return RunDNSQueryTestResponsePathSelectorNsRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorNs) Class() RunDNSQueryTestResponsePathSelectorNsClass {
	return RunDNSQueryTestResponsePathSelectorNsClass{}
}

func (RunDNSQueryTestResponsePathSelectorNs) Ttl() RunDNSQueryTestResponsePathSelectorNsTtl {
	return RunDNSQueryTestResponsePathSelectorNsTtl{}
}

func (RunDNSQueryTestResponsePathSelectorNs) Rdlength() RunDNSQueryTestResponsePathSelectorNsRdlength {
	return RunDNSQueryTestResponsePathSelectorNsRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorNs) Rdata() RunDNSQueryTestResponsePathSelectorNsRdata {
	return RunDNSQueryTestResponsePathSelectorNsRdata{}
}

type RunDNSQueryTestResponsePathSelectorNsName struct{}

func (RunDNSQueryTestResponsePathSelectorNsName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorNsRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorNsRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorNsClass struct{}

func (RunDNSQueryTestResponsePathSelectorNsClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorNsTtl struct{}

func (RunDNSQueryTestResponsePathSelectorNsTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorNsRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorNsRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorNsRdata struct{}

func (RunDNSQueryTestResponsePathSelectorNsRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorNsRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorNsRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorNsRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorExtras struct{}

func (RunDNSQueryTestResponsePathSelectorExtras) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorExtras}
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponsePathSelectorExtras) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{selector: RunDNSQueryTestResponse_FieldPathSelectorExtras, subPath: subPath}
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponse_FieldSubPathValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponsePathSelectorExtras) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Name() RunDNSQueryTestResponsePathSelectorExtrasName {
	return RunDNSQueryTestResponsePathSelectorExtrasName{}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Rrtype() RunDNSQueryTestResponsePathSelectorExtrasRrtype {
	return RunDNSQueryTestResponsePathSelectorExtrasRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Class() RunDNSQueryTestResponsePathSelectorExtrasClass {
	return RunDNSQueryTestResponsePathSelectorExtrasClass{}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Ttl() RunDNSQueryTestResponsePathSelectorExtrasTtl {
	return RunDNSQueryTestResponsePathSelectorExtrasTtl{}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Rdlength() RunDNSQueryTestResponsePathSelectorExtrasRdlength {
	return RunDNSQueryTestResponsePathSelectorExtrasRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorExtras) Rdata() RunDNSQueryTestResponsePathSelectorExtrasRdata {
	return RunDNSQueryTestResponsePathSelectorExtrasRdata{}
}

type RunDNSQueryTestResponsePathSelectorExtrasName struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorExtrasRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorExtrasClass struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorExtrasTtl struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorExtrasRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorExtrasRdata struct{}

func (RunDNSQueryTestResponsePathSelectorExtrasRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorExtrasRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorRtt struct{}

func (RunDNSQueryTestResponsePathSelectorRtt) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorRtt}
}

func (s RunDNSQueryTestResponsePathSelectorRtt) WithValue(value *duration.Duration) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorRtt) WithArrayOfValues(values []*duration.Duration) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbeFieldPathBuilder struct{}

func NewRunDNSQueryTestRequestToProbeFieldPathBuilder() RunDNSQueryTestRequestToProbeFieldPathBuilder {
	return RunDNSQueryTestRequestToProbeFieldPathBuilder{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) Query() RunDNSQueryTestRequestToProbePathSelectorQuery {
	return RunDNSQueryTestRequestToProbePathSelectorQuery{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) Server() RunDNSQueryTestRequestToProbePathSelectorServer {
	return RunDNSQueryTestRequestToProbePathSelectorServer{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) Port() RunDNSQueryTestRequestToProbePathSelectorPort {
	return RunDNSQueryTestRequestToProbePathSelectorPort{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) Tcp() RunDNSQueryTestRequestToProbePathSelectorTcp {
	return RunDNSQueryTestRequestToProbePathSelectorTcp{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) NoRecursionDesired() RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired {
	return RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired{}
}
func (RunDNSQueryTestRequestToProbeFieldPathBuilder) Reverse() RunDNSQueryTestRequestToProbePathSelectorReverse {
	return RunDNSQueryTestRequestToProbePathSelectorReverse{}
}

type RunDNSQueryTestRequestToProbePathSelectorQuery struct{}

func (RunDNSQueryTestRequestToProbePathSelectorQuery) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorQuery}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQuery) WithValue(value *common.DNSQuery) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorQuery) WithArrayOfValues(values []*common.DNSQuery) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}

func (RunDNSQueryTestRequestToProbePathSelectorQuery) WithSubPath(subPath common.DNSQuery_FieldPath) *RunDNSQueryTestRequestToProbe_FieldSubPath {
	return &RunDNSQueryTestRequestToProbe_FieldSubPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorQuery, subPath: subPath}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQuery) WithSubValue(subPathValue common.DNSQuery_FieldPathValue) *RunDNSQueryTestRequestToProbe_FieldSubPathValue {
	return &RunDNSQueryTestRequestToProbe_FieldSubPathValue{RunDNSQueryTestRequestToProbe_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQuery) WithSubArrayOfValues(subPathArrayOfValues common.DNSQuery_FieldPathArrayOfValues) *RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues{RunDNSQueryTestRequestToProbe_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQuery) WithSubArrayItemValue(subPathArrayItemValue common.DNSQuery_FieldPathArrayItemValue) *RunDNSQueryTestRequestToProbe_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestRequestToProbe_FieldSubPathArrayItemValue{RunDNSQueryTestRequestToProbe_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestRequestToProbePathSelectorQuery) Name() RunDNSQueryTestRequestToProbePathSelectorQueryName {
	return RunDNSQueryTestRequestToProbePathSelectorQueryName{}
}

func (RunDNSQueryTestRequestToProbePathSelectorQuery) Qtype() RunDNSQueryTestRequestToProbePathSelectorQueryQtype {
	return RunDNSQueryTestRequestToProbePathSelectorQueryQtype{}
}

func (RunDNSQueryTestRequestToProbePathSelectorQuery) Qclass() RunDNSQueryTestRequestToProbePathSelectorQueryQclass {
	return RunDNSQueryTestRequestToProbePathSelectorQueryQclass{}
}

type RunDNSQueryTestRequestToProbePathSelectorQueryName struct{}

func (RunDNSQueryTestRequestToProbePathSelectorQueryName) FieldPath() *RunDNSQueryTestRequestToProbe_FieldSubPath {
	return &RunDNSQueryTestRequestToProbe_FieldSubPath{
		selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryName) WithValue(value string) *RunDNSQueryTestRequestToProbe_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryName) WithArrayOfValues(values []string) *RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorQueryQtype struct{}

func (RunDNSQueryTestRequestToProbePathSelectorQueryQtype) FieldPath() *RunDNSQueryTestRequestToProbe_FieldSubPath {
	return &RunDNSQueryTestRequestToProbe_FieldSubPath{
		selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestRequestToProbe_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorQueryQclass struct{}

func (RunDNSQueryTestRequestToProbePathSelectorQueryQclass) FieldPath() *RunDNSQueryTestRequestToProbe_FieldSubPath {
	return &RunDNSQueryTestRequestToProbe_FieldSubPath{
		selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryQclass) WithValue(value common.DNSClass) *RunDNSQueryTestRequestToProbe_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorQueryQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorServer struct{}

func (RunDNSQueryTestRequestToProbePathSelectorServer) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorServer}
}

func (s RunDNSQueryTestRequestToProbePathSelectorServer) WithValue(value string) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorServer) WithArrayOfValues(values []string) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorPort struct{}

func (RunDNSQueryTestRequestToProbePathSelectorPort) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorPort}
}

func (s RunDNSQueryTestRequestToProbePathSelectorPort) WithValue(value uint32) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorPort) WithArrayOfValues(values []uint32) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorTcp struct{}

func (RunDNSQueryTestRequestToProbePathSelectorTcp) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorTcp}
}

func (s RunDNSQueryTestRequestToProbePathSelectorTcp) WithValue(value bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorTcp) WithArrayOfValues(values []bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired struct{}

func (RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorNoRecursionDesired}
}

func (s RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired) WithValue(value bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorNoRecursionDesired) WithArrayOfValues(values []bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestToProbePathSelectorReverse struct{}

func (RunDNSQueryTestRequestToProbePathSelectorReverse) FieldPath() *RunDNSQueryTestRequestToProbe_FieldTerminalPath {
	return &RunDNSQueryTestRequestToProbe_FieldTerminalPath{selector: RunDNSQueryTestRequestToProbe_FieldPathSelectorReverse}
}

func (s RunDNSQueryTestRequestToProbePathSelectorReverse) WithValue(value bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestToProbePathSelectorReverse) WithArrayOfValues(values []bool) *RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequestToProbe_FieldTerminalPathArrayOfValues)
}
