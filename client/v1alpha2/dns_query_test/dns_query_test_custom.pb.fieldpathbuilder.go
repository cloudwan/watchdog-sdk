// Code generated by protoc-gen-goten-object
// File: watchdog/proto/v1alpha2/dns_query_test_custom.proto
// DO NOT EDIT!!!

package dns_query_test_client

// proto imports
import (
	ntt_memo "github.com/cloudwan/edgelq-sdk/common/types/memo"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	devices_device "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/device"
	devices_project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	iam_attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	iam_service_account "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/service_account"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	admin_area "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/admin_area"
	common "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/common"
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	probe_group "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe_group"
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_memo.Memo{}
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &devices_device.Device{}
	_ = &devices_project.Project{}
	_ = &iam_attestation_domain.AttestationDomain{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &iam_service_account.ServiceAccount{}
	_ = &meta_service.Service{}
	_ = &duration.Duration{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = &wrappers.DoubleValue{}
	_ = &latlng.LatLng{}
	_ = &admin_area.BBox{}
	_ = &common.SoftwareVersion{}
	_ = &probe.Probe{}
	_ = &probe_group.ProbeGroup{}
	_ = &project.Project{}
)

type RunDNSQueryTestRequestFieldPathBuilder struct{}

func NewRunDNSQueryTestRequestFieldPathBuilder() RunDNSQueryTestRequestFieldPathBuilder {
	return RunDNSQueryTestRequestFieldPathBuilder{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Name() RunDNSQueryTestRequestPathSelectorName {
	return RunDNSQueryTestRequestPathSelectorName{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Query() RunDNSQueryTestRequestPathSelectorQuery {
	return RunDNSQueryTestRequestPathSelectorQuery{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Server() RunDNSQueryTestRequestPathSelectorServer {
	return RunDNSQueryTestRequestPathSelectorServer{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Port() RunDNSQueryTestRequestPathSelectorPort {
	return RunDNSQueryTestRequestPathSelectorPort{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Tcp() RunDNSQueryTestRequestPathSelectorTcp {
	return RunDNSQueryTestRequestPathSelectorTcp{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) NoRecursionDesired() RunDNSQueryTestRequestPathSelectorNoRecursionDesired {
	return RunDNSQueryTestRequestPathSelectorNoRecursionDesired{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) Reverse() RunDNSQueryTestRequestPathSelectorReverse {
	return RunDNSQueryTestRequestPathSelectorReverse{}
}
func (RunDNSQueryTestRequestFieldPathBuilder) OutputFormat() RunDNSQueryTestRequestPathSelectorOutputFormat {
	return RunDNSQueryTestRequestPathSelectorOutputFormat{}
}

type RunDNSQueryTestRequestPathSelectorName struct{}

func (RunDNSQueryTestRequestPathSelectorName) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorName}
}

func (s RunDNSQueryTestRequestPathSelectorName) WithValue(value *probe.Reference) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorName) WithArrayOfValues(values []*probe.Reference) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQuery struct{}

func (RunDNSQueryTestRequestPathSelectorQuery) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorQuery}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithValue(value *common.DNSQuery) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithArrayOfValues(values []*common.DNSQuery) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

func (RunDNSQueryTestRequestPathSelectorQuery) WithSubPath(subPath common.DNSQuery_FieldPath) *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{selector: RunDNSQueryTestRequest_FieldPathSelectorQuery, subPath: subPath}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubValue(subPathValue common.DNSQuery_FieldPathValue) *RunDNSQueryTestRequest_FieldSubPathValue {
	return &RunDNSQueryTestRequest_FieldSubPathValue{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubArrayOfValues(subPathArrayOfValues common.DNSQuery_FieldPathArrayOfValues) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestRequest_FieldSubPathArrayOfValues{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestRequestPathSelectorQuery) WithSubArrayItemValue(subPathArrayItemValue common.DNSQuery_FieldPathArrayItemValue) *RunDNSQueryTestRequest_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestRequest_FieldSubPathArrayItemValue{RunDNSQueryTestRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Name() RunDNSQueryTestRequestPathSelectorQueryName {
	return RunDNSQueryTestRequestPathSelectorQueryName{}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Qtype() RunDNSQueryTestRequestPathSelectorQueryQtype {
	return RunDNSQueryTestRequestPathSelectorQueryQtype{}
}

func (RunDNSQueryTestRequestPathSelectorQuery) Qclass() RunDNSQueryTestRequestPathSelectorQueryQclass {
	return RunDNSQueryTestRequestPathSelectorQueryQclass{}
}

type RunDNSQueryTestRequestPathSelectorQueryName struct{}

func (RunDNSQueryTestRequestPathSelectorQueryName) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryName) WithValue(value string) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryName) WithArrayOfValues(values []string) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQueryQtype struct{}

func (RunDNSQueryTestRequestPathSelectorQueryQtype) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorQueryQclass struct{}

func (RunDNSQueryTestRequestPathSelectorQueryQclass) FieldPath() *RunDNSQueryTestRequest_FieldSubPath {
	return &RunDNSQueryTestRequest_FieldSubPath{
		selector: RunDNSQueryTestRequest_FieldPathSelectorQuery,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestRequestPathSelectorQueryQclass) WithValue(value common.DNSClass) *RunDNSQueryTestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldSubPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorQueryQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorServer struct{}

func (RunDNSQueryTestRequestPathSelectorServer) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorServer}
}

func (s RunDNSQueryTestRequestPathSelectorServer) WithValue(value string) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorServer) WithArrayOfValues(values []string) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorPort struct{}

func (RunDNSQueryTestRequestPathSelectorPort) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorPort}
}

func (s RunDNSQueryTestRequestPathSelectorPort) WithValue(value uint32) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorPort) WithArrayOfValues(values []uint32) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorTcp struct{}

func (RunDNSQueryTestRequestPathSelectorTcp) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorTcp}
}

func (s RunDNSQueryTestRequestPathSelectorTcp) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorTcp) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorNoRecursionDesired struct{}

func (RunDNSQueryTestRequestPathSelectorNoRecursionDesired) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorNoRecursionDesired}
}

func (s RunDNSQueryTestRequestPathSelectorNoRecursionDesired) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorNoRecursionDesired) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorReverse struct{}

func (RunDNSQueryTestRequestPathSelectorReverse) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorReverse}
}

func (s RunDNSQueryTestRequestPathSelectorReverse) WithValue(value bool) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorReverse) WithArrayOfValues(values []bool) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestRequestPathSelectorOutputFormat struct{}

func (RunDNSQueryTestRequestPathSelectorOutputFormat) FieldPath() *RunDNSQueryTestRequest_FieldTerminalPath {
	return &RunDNSQueryTestRequest_FieldTerminalPath{selector: RunDNSQueryTestRequest_FieldPathSelectorOutputFormat}
}

func (s RunDNSQueryTestRequestPathSelectorOutputFormat) WithValue(value common.OnDemandTestResponseFormat) *RunDNSQueryTestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestRequest_FieldTerminalPathValue)
}

func (s RunDNSQueryTestRequestPathSelectorOutputFormat) WithArrayOfValues(values []common.OnDemandTestResponseFormat) *RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestRequest_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponseFieldPathBuilder struct{}

func NewRunDNSQueryTestResponseFieldPathBuilder() RunDNSQueryTestResponseFieldPathBuilder {
	return RunDNSQueryTestResponseFieldPathBuilder{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) JsonResponse() RunDNSQueryTestResponsePathSelectorJsonResponse {
	return RunDNSQueryTestResponsePathSelectorJsonResponse{}
}
func (RunDNSQueryTestResponseFieldPathBuilder) TextResponse() RunDNSQueryTestResponsePathSelectorTextResponse {
	return RunDNSQueryTestResponsePathSelectorTextResponse{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponse struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponse) WithValue(value *RunDNSQueryTestResponse_JsonResponse) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponse) WithArrayOfValues(values []*RunDNSQueryTestResponse_JsonResponse) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) WithSubPath(subPath RunDNSQueryTestResponseJsonResponse_FieldPath) *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse, subPath: subPath}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponse) WithSubValue(subPathValue RunDNSQueryTestResponseJsonResponse_FieldPathValue) *RunDNSQueryTestResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponse_FieldSubPathValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponse) WithSubArrayOfValues(subPathArrayOfValues RunDNSQueryTestResponseJsonResponse_FieldPathArrayOfValues) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponse) WithSubArrayItemValue(subPathArrayItemValue RunDNSQueryTestResponseJsonResponse_FieldPathArrayItemValue) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Id() RunDNSQueryTestResponsePathSelectorJsonResponseId {
	return RunDNSQueryTestResponsePathSelectorJsonResponseId{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Rcode() RunDNSQueryTestResponsePathSelectorJsonResponseRcode {
	return RunDNSQueryTestResponsePathSelectorJsonResponseRcode{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Flags() RunDNSQueryTestResponsePathSelectorJsonResponseFlags {
	return RunDNSQueryTestResponsePathSelectorJsonResponseFlags{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Queries() RunDNSQueryTestResponsePathSelectorJsonResponseQueries {
	return RunDNSQueryTestResponsePathSelectorJsonResponseQueries{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Answers() RunDNSQueryTestResponsePathSelectorJsonResponseAnswers {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswers{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Ns() RunDNSQueryTestResponsePathSelectorJsonResponseNs {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNs{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Extras() RunDNSQueryTestResponsePathSelectorJsonResponseExtras {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtras{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponse) Rtt() RunDNSQueryTestResponsePathSelectorJsonResponseRtt {
	return RunDNSQueryTestResponsePathSelectorJsonResponseRtt{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponseId struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseId) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Id().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseId) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseId) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseRcode struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseRcode) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Rcode().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseRcode) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseRcode) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseFlags struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseFlags) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Flags().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseFlags) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseFlags) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseFlags) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseQueries struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueries) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Queries().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueries) WithValue(value []*common.DNSQuery) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueries) WithArrayOfValues(values [][]*common.DNSQuery) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueries) WithItemValue(value *common.DNSQuery) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueries) Name() RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName {
	return RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueries) Qtype() RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype {
	return RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueries) Qclass() RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass {
	return RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Queries().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Queries().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Queries().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseQueriesQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswers struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Name() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Rrtype() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Class() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Ttl() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Rdlength() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswers) Rdata() RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata {
	return RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Answers().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseAnswersRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNs struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNs) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNs) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNs) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Name() RunDNSQueryTestResponsePathSelectorJsonResponseNsName {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsName{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Rrtype() RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Class() RunDNSQueryTestResponsePathSelectorJsonResponseNsClass {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsClass{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Ttl() RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Rdlength() RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNs) Rdata() RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata {
	return RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsName struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsClass struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Ns().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseNsRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtras struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtras) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtras) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtras) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Name() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Rrtype() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Class() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Ttl() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Rdlength() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength{}
}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtras) Rdata() RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata {
	return RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata{}
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName) WithValue(value string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasName) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength) WithValue(value uint32) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Extras().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata) WithValue(value []string) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseExtrasRdata) WithItemValue(value string) *RunDNSQueryTestResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponsePathSelectorJsonResponseRtt struct{}

func (RunDNSQueryTestResponsePathSelectorJsonResponseRtt) FieldPath() *RunDNSQueryTestResponse_FieldSubPath {
	return &RunDNSQueryTestResponse_FieldSubPath{
		selector: RunDNSQueryTestResponse_FieldPathSelectorJsonResponse,
		subPath:  NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder().Rtt().FieldPath(),
	}
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseRtt) WithValue(value *duration.Duration) *RunDNSQueryTestResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorJsonResponseRtt) WithArrayOfValues(values []*duration.Duration) *RunDNSQueryTestResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponsePathSelectorTextResponse struct{}

func (RunDNSQueryTestResponsePathSelectorTextResponse) FieldPath() *RunDNSQueryTestResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponse_FieldTerminalPath{selector: RunDNSQueryTestResponse_FieldPathSelectorTextResponse}
}

func (s RunDNSQueryTestResponsePathSelectorTextResponse) WithValue(value string) *RunDNSQueryTestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponsePathSelectorTextResponse) WithArrayOfValues(values []string) *RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponseJsonResponseFieldPathBuilder struct{}

func NewRunDNSQueryTestResponseJsonResponseFieldPathBuilder() RunDNSQueryTestResponseJsonResponseFieldPathBuilder {
	return RunDNSQueryTestResponseJsonResponseFieldPathBuilder{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Id() RunDNSQueryTestResponse_JsonResponsePathSelectorId {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorId{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Rcode() RunDNSQueryTestResponse_JsonResponsePathSelectorRcode {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorRcode{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Flags() RunDNSQueryTestResponse_JsonResponsePathSelectorFlags {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorFlags{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Queries() RunDNSQueryTestResponse_JsonResponsePathSelectorQueries {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorQueries{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Answers() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Ns() RunDNSQueryTestResponse_JsonResponsePathSelectorNs {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNs{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Extras() RunDNSQueryTestResponse_JsonResponsePathSelectorExtras {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtras{}
}
func (RunDNSQueryTestResponseJsonResponseFieldPathBuilder) Rtt() RunDNSQueryTestResponse_JsonResponsePathSelectorRtt {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorRtt{}
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorId struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorId) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorId}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorId) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorId) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorRcode struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorRcode) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorRcode}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorRcode) WithValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorRcode) WithArrayOfValues(values []string) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorFlags struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorFlags) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorFlags}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorFlags) WithValue(value []string) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorFlags) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorFlags) WithItemValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorQueries struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorQueries}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithValue(value []*common.DNSQuery) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithArrayOfValues(values [][]*common.DNSQuery) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithItemValue(value *common.DNSQuery) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithSubPath(subPath common.DNSQuery_FieldPath) *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorQueries, subPath: subPath}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithSubValue(subPathValue common.DNSQuery_FieldPathValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithSubArrayOfValues(subPathArrayOfValues common.DNSQuery_FieldPathArrayOfValues) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) WithSubArrayItemValue(subPathArrayItemValue common.DNSQuery_FieldPathArrayItemValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) Name() RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) Qtype() RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueries) Qclass() RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass{}
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName) WithValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesName) WithArrayOfValues(values []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorQueries,
		subPath:  common.NewDNSQueryFieldPathBuilder().Qclass().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass) WithValue(value common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorQueriesQclass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers, subPath: subPath}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Name() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Rrtype() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Class() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Ttl() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Rdlength() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswers) Rdata() RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata{}
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName) WithValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersName) WithArrayOfValues(values []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorAnswers,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata) WithValue(value []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorAnswersRdata) WithItemValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNs struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs, subPath: subPath}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNs) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Name() RunDNSQueryTestResponse_JsonResponsePathSelectorNsName {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsName{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Rrtype() RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Class() RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Ttl() RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Rdlength() RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNs) Rdata() RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata{}
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsName struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsName) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsName) WithValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsName) WithArrayOfValues(values []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorNs,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata) WithValue(value []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorNsRdata) WithItemValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtras struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithValue(value []*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithArrayOfValues(values [][]*common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithItemValue(value *common.DNSResourceRecord) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayItemValue)
}
func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithSubPath(subPath common.DNSResourceRecord_FieldPath) *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras, subPath: subPath}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithSubValue(subPathValue common.DNSResourceRecord_FieldPathValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithSubArrayOfValues(subPathArrayOfValues common.DNSResourceRecord_FieldPathArrayOfValues) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) WithSubArrayItemValue(subPathArrayItemValue common.DNSResourceRecord_FieldPathArrayItemValue) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue{RunDNSQueryTestResponseJsonResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Name() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Rrtype() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Class() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Ttl() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Rdlength() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength{}
}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtras) Rdata() RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata {
	return RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata{}
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Name().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName) WithValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasName) WithArrayOfValues(values []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rrtype().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype) WithValue(value common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRrtype) WithArrayOfValues(values []common.DNSResourceRecordType) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Class().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass) WithValue(value common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasClass) WithArrayOfValues(values []common.DNSClass) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Ttl().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasTtl) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdlength().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength) WithValue(value uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdlength) WithArrayOfValues(values []uint32) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldSubPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldSubPath{
		selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorExtras,
		subPath:  common.NewDNSResourceRecordFieldPathBuilder().Rdata().FieldPath(),
	}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata) WithValue(value []string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata) WithArrayOfValues(values [][]string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayOfValues)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorExtrasRdata) WithItemValue(value string) *RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldSubPathArrayItemValue)
}

type RunDNSQueryTestResponse_JsonResponsePathSelectorRtt struct{}

func (RunDNSQueryTestResponse_JsonResponsePathSelectorRtt) FieldPath() *RunDNSQueryTestResponseJsonResponse_FieldTerminalPath {
	return &RunDNSQueryTestResponseJsonResponse_FieldTerminalPath{selector: RunDNSQueryTestResponseJsonResponse_FieldPathSelectorRtt}
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorRtt) WithValue(value *duration.Duration) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathValue)
}

func (s RunDNSQueryTestResponse_JsonResponsePathSelectorRtt) WithArrayOfValues(values []*duration.Duration) *RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RunDNSQueryTestResponseJsonResponse_FieldTerminalPathArrayOfValues)
}
