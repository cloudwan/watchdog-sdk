// Code generated by protoc-gen-goten-client
// API: InternetQualityRatingService
// DO NOT EDIT!!!

package internet_quality_rating_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	internet_quality_rating "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/internet_quality_rating"
	empty "github.com/golang/protobuf/ptypes/empty"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Message(nil)
	_ = gotenclient.MethodDescriptor(nil)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &empty.Empty{}
	_ = &internet_quality_rating.InternetQualityRating{}
)

var (
	descriptorsInitialized                   bool
	internetQualityRatingServiceDescriptor   *InternetQualityRatingServiceDescriptor
	getInternetQualityRatingDescriptor       *GetInternetQualityRatingDescriptor
	batchGetInternetQualityRatingsDescriptor *BatchGetInternetQualityRatingsDescriptor
	listInternetQualityRatingsDescriptor     *ListInternetQualityRatingsDescriptor
	watchInternetQualityRatingDescriptor     *WatchInternetQualityRatingDescriptor
	watchInternetQualityRatingsDescriptor    *WatchInternetQualityRatingsDescriptor
	createInternetQualityRatingDescriptor    *CreateInternetQualityRatingDescriptor
	updateInternetQualityRatingDescriptor    *UpdateInternetQualityRatingDescriptor
	deleteInternetQualityRatingDescriptor    *DeleteInternetQualityRatingDescriptor
)

type GetInternetQualityRatingDescriptor struct{}

type GetInternetQualityRatingDescriptorClientMsgHandle struct{}

type GetInternetQualityRatingDescriptorServerMsgHandle struct{}

func (d *GetInternetQualityRatingDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetInternetQualityRatingRequest{}
}

func (d *GetInternetQualityRatingDescriptor) NewEmptyServerMsg() proto.Message {
	return &internet_quality_rating.InternetQualityRating{}
}

func (d *GetInternetQualityRatingDescriptor) IsUnary() bool {
	return true
}

func (d *GetInternetQualityRatingDescriptor) IsClientStream() bool {
	return false
}

func (d *GetInternetQualityRatingDescriptor) IsServerStream() bool {
	return false
}

func (d *GetInternetQualityRatingDescriptor) IsCollectionSubject() bool {
	return false
}

func (d *GetInternetQualityRatingDescriptor) IsPluralSubject() bool {
	return false
}

func (d *GetInternetQualityRatingDescriptor) HasSubjectResource() bool {
	return true
}

func (d *GetInternetQualityRatingDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetInternetQualityRatingDescriptor) GetVerb() string {
	return "get"
}

func (d *GetInternetQualityRatingDescriptor) GetMethodName() string {
	return "GetInternetQualityRating"
}

func (d *GetInternetQualityRatingDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/GetInternetQualityRating"
}

func (d *GetInternetQualityRatingDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *GetInternetQualityRatingDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *GetInternetQualityRatingDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *GetInternetQualityRatingDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *GetInternetQualityRatingDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *GetInternetQualityRatingDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *GetInternetQualityRatingDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetInternetQualityRatingDescriptorClientMsgHandle{}
}

func (d *GetInternetQualityRatingDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetInternetQualityRatingDescriptorServerMsgHandle{}
}

func (h *GetInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*GetInternetQualityRatingRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	if ref := typedMsg.GetName(); ref != nil {
		return &ref.Name
	}
	return (*internet_quality_rating.Name)(nil)
}

func (h *GetInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*GetInternetQualityRatingRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *GetInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*GetInternetQualityRatingRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func (h *GetInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return typedMsg.GetName()
}

func (h *GetInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*internet_quality_rating.InternetQualityRating) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *GetInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetGetInternetQualityRatingDescriptor() *GetInternetQualityRatingDescriptor {
	return getInternetQualityRatingDescriptor
}

type BatchGetInternetQualityRatingsDescriptor struct{}

type BatchGetInternetQualityRatingsDescriptorClientMsgHandle struct{}

type BatchGetInternetQualityRatingsDescriptorServerMsgHandle struct{}

func (d *BatchGetInternetQualityRatingsDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetInternetQualityRatingsRequest{}
}

func (d *BatchGetInternetQualityRatingsDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetInternetQualityRatingsResponse{}
}

func (d *BatchGetInternetQualityRatingsDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetInternetQualityRatingsDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetInternetQualityRatingsDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetInternetQualityRatingsDescriptor) IsCollectionSubject() bool {
	return true
}

func (d *BatchGetInternetQualityRatingsDescriptor) IsPluralSubject() bool {
	return true
}

func (d *BatchGetInternetQualityRatingsDescriptor) HasSubjectResource() bool {
	return true
}

func (d *BatchGetInternetQualityRatingsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetMethodName() string {
	return "BatchGetInternetQualityRatings"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/BatchGetInternetQualityRatings"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetInternetQualityRatingsDescriptorClientMsgHandle{}
}

func (d *BatchGetInternetQualityRatingsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetInternetQualityRatingsDescriptorServerMsgHandle{}
}

func (h *BatchGetInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*BatchGetInternetQualityRatingsRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*BatchGetInternetQualityRatingsRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	if refs := typedMsg.GetNames(); len(refs) > 0 {
		list := make(internet_quality_rating.InternetQualityRatingNameList, 0, len(refs))
		for _, ref := range refs {
			list = append(list, &ref.Name)
		}
		return list
	}
	return (internet_quality_rating.InternetQualityRatingNameList)(nil)
}

func (h *BatchGetInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*BatchGetInternetQualityRatingsRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*BatchGetInternetQualityRatingsResponse) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*BatchGetInternetQualityRatingsResponse) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	resources := typedMsg.GetInternetQualityRatings()
	list := make(internet_quality_rating.InternetQualityRatingNameList, 0, len(resources))
	for _, res := range resources {
		list = append(list, res.GetName())
	}
	return list
}

func (h *BatchGetInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*BatchGetInternetQualityRatingsResponse) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetBatchGetInternetQualityRatingsDescriptor() *BatchGetInternetQualityRatingsDescriptor {
	return batchGetInternetQualityRatingsDescriptor
}

type ListInternetQualityRatingsDescriptor struct{}

type ListInternetQualityRatingsDescriptorClientMsgHandle struct{}

type ListInternetQualityRatingsDescriptorServerMsgHandle struct{}

func (d *ListInternetQualityRatingsDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListInternetQualityRatingsRequest{}
}

func (d *ListInternetQualityRatingsDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListInternetQualityRatingsResponse{}
}

func (d *ListInternetQualityRatingsDescriptor) IsUnary() bool {
	return true
}

func (d *ListInternetQualityRatingsDescriptor) IsClientStream() bool {
	return false
}

func (d *ListInternetQualityRatingsDescriptor) IsServerStream() bool {
	return false
}

func (d *ListInternetQualityRatingsDescriptor) IsCollectionSubject() bool {
	return true
}

func (d *ListInternetQualityRatingsDescriptor) IsPluralSubject() bool {
	return true
}

func (d *ListInternetQualityRatingsDescriptor) HasSubjectResource() bool {
	return true
}

func (d *ListInternetQualityRatingsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListInternetQualityRatingsDescriptor) GetVerb() string {
	return "list"
}

func (d *ListInternetQualityRatingsDescriptor) GetMethodName() string {
	return "ListInternetQualityRatings"
}

func (d *ListInternetQualityRatingsDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/ListInternetQualityRatings"
}

func (d *ListInternetQualityRatingsDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *ListInternetQualityRatingsDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *ListInternetQualityRatingsDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *ListInternetQualityRatingsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *ListInternetQualityRatingsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *ListInternetQualityRatingsDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *ListInternetQualityRatingsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListInternetQualityRatingsDescriptorClientMsgHandle{}
}

func (d *ListInternetQualityRatingsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListInternetQualityRatingsDescriptorServerMsgHandle{}
}

func (h *ListInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*ListInternetQualityRatingsRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *ListInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*ListInternetQualityRatingsRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *ListInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*ListInternetQualityRatingsRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return typedMsg.GetParent()
}

func (h *ListInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*ListInternetQualityRatingsResponse) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *ListInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*ListInternetQualityRatingsResponse) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	resources := typedMsg.GetInternetQualityRatings()
	list := make(internet_quality_rating.InternetQualityRatingNameList, 0, len(resources))
	for _, res := range resources {
		list = append(list, res.GetName())
	}
	return list
}

func (h *ListInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*ListInternetQualityRatingsResponse) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetListInternetQualityRatingsDescriptor() *ListInternetQualityRatingsDescriptor {
	return listInternetQualityRatingsDescriptor
}

type WatchInternetQualityRatingDescriptor struct{}

type WatchInternetQualityRatingDescriptorClientMsgHandle struct{}

type WatchInternetQualityRatingDescriptorServerMsgHandle struct{}

func (d *WatchInternetQualityRatingDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchInternetQualityRatingRequest{}
}

func (d *WatchInternetQualityRatingDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchInternetQualityRatingResponse{}
}

func (d *WatchInternetQualityRatingDescriptor) IsUnary() bool {
	return false
}

func (d *WatchInternetQualityRatingDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchInternetQualityRatingDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchInternetQualityRatingDescriptor) IsCollectionSubject() bool {
	return false
}

func (d *WatchInternetQualityRatingDescriptor) IsPluralSubject() bool {
	return false
}

func (d *WatchInternetQualityRatingDescriptor) HasSubjectResource() bool {
	return true
}

func (d *WatchInternetQualityRatingDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchInternetQualityRatingDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchInternetQualityRatingDescriptor) GetMethodName() string {
	return "WatchInternetQualityRating"
}

func (d *WatchInternetQualityRatingDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/WatchInternetQualityRating"
}

func (d *WatchInternetQualityRatingDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *WatchInternetQualityRatingDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *WatchInternetQualityRatingDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *WatchInternetQualityRatingDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchInternetQualityRatingDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *WatchInternetQualityRatingDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *WatchInternetQualityRatingDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchInternetQualityRatingDescriptorClientMsgHandle{}
}

func (d *WatchInternetQualityRatingDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchInternetQualityRatingDescriptorServerMsgHandle{}
}

func (h *WatchInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*WatchInternetQualityRatingRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	if ref := typedMsg.GetName(); ref != nil {
		return &ref.Name
	}
	return (*internet_quality_rating.Name)(nil)
}

func (h *WatchInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*WatchInternetQualityRatingRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*WatchInternetQualityRatingRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*WatchInternetQualityRatingResponse) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	if typedMsg.GetChange() != nil {
		switch tResChange := typedMsg.GetChange().ChangeType.(type) {
		case *internet_quality_rating.InternetQualityRatingChange_Added_:
			return tResChange.Added.GetInternetQualityRating().GetName()
		case *internet_quality_rating.InternetQualityRatingChange_Modified_:
			return tResChange.Modified.GetName()
		case *internet_quality_rating.InternetQualityRatingChange_Removed_:
			return tResChange.Removed.GetName()
		case *internet_quality_rating.InternetQualityRatingChange_Current_:
			return tResChange.Current.GetInternetQualityRating().GetName()
		}
	}
	return (*internet_quality_rating.Name)(nil)
}

func (h *WatchInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchInternetQualityRatingResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*WatchInternetQualityRatingResponse) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*WatchInternetQualityRatingResponse) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetWatchInternetQualityRatingDescriptor() *WatchInternetQualityRatingDescriptor {
	return watchInternetQualityRatingDescriptor
}

type WatchInternetQualityRatingsDescriptor struct{}

type WatchInternetQualityRatingsDescriptorClientMsgHandle struct{}

type WatchInternetQualityRatingsDescriptorServerMsgHandle struct{}

func (d *WatchInternetQualityRatingsDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchInternetQualityRatingsRequest{}
}

func (d *WatchInternetQualityRatingsDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchInternetQualityRatingsResponse{}
}

func (d *WatchInternetQualityRatingsDescriptor) IsUnary() bool {
	return false
}

func (d *WatchInternetQualityRatingsDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchInternetQualityRatingsDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchInternetQualityRatingsDescriptor) IsCollectionSubject() bool {
	return true
}

func (d *WatchInternetQualityRatingsDescriptor) IsPluralSubject() bool {
	return true
}

func (d *WatchInternetQualityRatingsDescriptor) HasSubjectResource() bool {
	return true
}

func (d *WatchInternetQualityRatingsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchInternetQualityRatingsDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchInternetQualityRatingsDescriptor) GetMethodName() string {
	return "WatchInternetQualityRatings"
}

func (d *WatchInternetQualityRatingsDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/WatchInternetQualityRatings"
}

func (d *WatchInternetQualityRatingsDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *WatchInternetQualityRatingsDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *WatchInternetQualityRatingsDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *WatchInternetQualityRatingsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchInternetQualityRatingsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *WatchInternetQualityRatingsDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *WatchInternetQualityRatingsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchInternetQualityRatingsDescriptorClientMsgHandle{}
}

func (d *WatchInternetQualityRatingsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchInternetQualityRatingsDescriptorServerMsgHandle{}
}

func (h *WatchInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*WatchInternetQualityRatingsRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *WatchInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*WatchInternetQualityRatingsRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchInternetQualityRatingsDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*WatchInternetQualityRatingsRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	if ref := typedMsg.GetParent(); ref != nil {
		return &ref.ParentName
	}
	return (*internet_quality_rating.ParentName)(nil)
}

func (h *WatchInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*WatchInternetQualityRatingsResponse) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *WatchInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*WatchInternetQualityRatingsResponse) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	resourceChanges := typedMsg.GetInternetQualityRatingChanges()
	list := make(internet_quality_rating.InternetQualityRatingNameList, 0, len(resourceChanges))
	for _, resChange := range resourceChanges {
		switch tResChange := resChange.ChangeType.(type) {
		case *internet_quality_rating.InternetQualityRatingChange_Added_:
			list = append(list, tResChange.Added.GetInternetQualityRating().GetName())
		case *internet_quality_rating.InternetQualityRatingChange_Modified_:
			list = append(list, tResChange.Modified.GetName())
		case *internet_quality_rating.InternetQualityRatingChange_Removed_:
			list = append(list, tResChange.Removed.GetName())
		case *internet_quality_rating.InternetQualityRatingChange_Current_:
			list = append(list, tResChange.Current.GetInternetQualityRating().GetName())
		}
	}
	return list
}

func (h *WatchInternetQualityRatingsDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchInternetQualityRatingsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*WatchInternetQualityRatingsResponse) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetWatchInternetQualityRatingsDescriptor() *WatchInternetQualityRatingsDescriptor {
	return watchInternetQualityRatingsDescriptor
}

type CreateInternetQualityRatingDescriptor struct{}

type CreateInternetQualityRatingDescriptorClientMsgHandle struct{}

type CreateInternetQualityRatingDescriptorServerMsgHandle struct{}

func (d *CreateInternetQualityRatingDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateInternetQualityRatingRequest{}
}

func (d *CreateInternetQualityRatingDescriptor) NewEmptyServerMsg() proto.Message {
	return &internet_quality_rating.InternetQualityRating{}
}

func (d *CreateInternetQualityRatingDescriptor) IsUnary() bool {
	return true
}

func (d *CreateInternetQualityRatingDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateInternetQualityRatingDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateInternetQualityRatingDescriptor) IsCollectionSubject() bool {
	return true
}

func (d *CreateInternetQualityRatingDescriptor) IsPluralSubject() bool {
	return false
}

func (d *CreateInternetQualityRatingDescriptor) HasSubjectResource() bool {
	return true
}

func (d *CreateInternetQualityRatingDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateInternetQualityRatingDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateInternetQualityRatingDescriptor) GetMethodName() string {
	return "CreateInternetQualityRating"
}

func (d *CreateInternetQualityRatingDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/CreateInternetQualityRating"
}

func (d *CreateInternetQualityRatingDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *CreateInternetQualityRatingDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *CreateInternetQualityRatingDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *CreateInternetQualityRatingDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *CreateInternetQualityRatingDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *CreateInternetQualityRatingDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *CreateInternetQualityRatingDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateInternetQualityRatingDescriptorClientMsgHandle{}
}

func (d *CreateInternetQualityRatingDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateInternetQualityRatingDescriptorServerMsgHandle{}
}

func (h *CreateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*CreateInternetQualityRatingRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return typedMsg.GetInternetQualityRating().GetName()
}

func (h *CreateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*CreateInternetQualityRatingRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*CreateInternetQualityRatingRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	if ref := typedMsg.GetParent(); ref != nil {
		return &ref.ParentName
	}
	return (*internet_quality_rating.ParentName)(nil)
}

func (h *CreateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return typedMsg.GetName()
}

func (h *CreateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*internet_quality_rating.InternetQualityRating) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetCreateInternetQualityRatingDescriptor() *CreateInternetQualityRatingDescriptor {
	return createInternetQualityRatingDescriptor
}

type UpdateInternetQualityRatingDescriptor struct{}

type UpdateInternetQualityRatingDescriptorClientMsgHandle struct{}

type UpdateInternetQualityRatingDescriptorServerMsgHandle struct{}

func (d *UpdateInternetQualityRatingDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateInternetQualityRatingRequest{}
}

func (d *UpdateInternetQualityRatingDescriptor) NewEmptyServerMsg() proto.Message {
	return &internet_quality_rating.InternetQualityRating{}
}

func (d *UpdateInternetQualityRatingDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateInternetQualityRatingDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateInternetQualityRatingDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateInternetQualityRatingDescriptor) IsCollectionSubject() bool {
	return false
}

func (d *UpdateInternetQualityRatingDescriptor) IsPluralSubject() bool {
	return false
}

func (d *UpdateInternetQualityRatingDescriptor) HasSubjectResource() bool {
	return true
}

func (d *UpdateInternetQualityRatingDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateInternetQualityRatingDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateInternetQualityRatingDescriptor) GetMethodName() string {
	return "UpdateInternetQualityRating"
}

func (d *UpdateInternetQualityRatingDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/UpdateInternetQualityRating"
}

func (d *UpdateInternetQualityRatingDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *UpdateInternetQualityRatingDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *UpdateInternetQualityRatingDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *UpdateInternetQualityRatingDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *UpdateInternetQualityRatingDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *UpdateInternetQualityRatingDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *UpdateInternetQualityRatingDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateInternetQualityRatingDescriptorClientMsgHandle{}
}

func (d *UpdateInternetQualityRatingDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateInternetQualityRatingDescriptorServerMsgHandle{}
}

func (h *UpdateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*UpdateInternetQualityRatingRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return typedMsg.GetInternetQualityRating().GetName()
}

func (h *UpdateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*UpdateInternetQualityRatingRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*UpdateInternetQualityRatingRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return typedMsg.GetName()
}

func (h *UpdateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*internet_quality_rating.InternetQualityRating) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*internet_quality_rating.InternetQualityRating)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*internet_quality_rating.InternetQualityRating) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetUpdateInternetQualityRatingDescriptor() *UpdateInternetQualityRatingDescriptor {
	return updateInternetQualityRatingDescriptor
}

type DeleteInternetQualityRatingDescriptor struct{}

type DeleteInternetQualityRatingDescriptorClientMsgHandle struct{}

type DeleteInternetQualityRatingDescriptorServerMsgHandle struct{}

func (d *DeleteInternetQualityRatingDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteInternetQualityRatingRequest{}
}

func (d *DeleteInternetQualityRatingDescriptor) NewEmptyServerMsg() proto.Message {
	return &empty.Empty{}
}

func (d *DeleteInternetQualityRatingDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteInternetQualityRatingDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteInternetQualityRatingDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteInternetQualityRatingDescriptor) IsCollectionSubject() bool {
	return false
}

func (d *DeleteInternetQualityRatingDescriptor) IsPluralSubject() bool {
	return false
}

func (d *DeleteInternetQualityRatingDescriptor) HasSubjectResource() bool {
	return true
}

func (d *DeleteInternetQualityRatingDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteInternetQualityRatingDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteInternetQualityRatingDescriptor) GetMethodName() string {
	return "DeleteInternetQualityRating"
}

func (d *DeleteInternetQualityRatingDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService/DeleteInternetQualityRating"
}

func (d *DeleteInternetQualityRatingDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *DeleteInternetQualityRatingDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *DeleteInternetQualityRatingDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *DeleteInternetQualityRatingDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *DeleteInternetQualityRatingDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return internetQualityRatingServiceDescriptor
}

func (d *DeleteInternetQualityRatingDescriptor) GetSubjectResourceDescriptor() gotenresource.Descriptor {
	return internet_quality_rating.GetDescriptor()
}

func (d *DeleteInternetQualityRatingDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteInternetQualityRatingDescriptorClientMsgHandle{}
}

func (d *DeleteInternetQualityRatingDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteInternetQualityRatingDescriptorServerMsgHandle{}
}

func (h *DeleteInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*DeleteInternetQualityRatingRequest) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	if ref := typedMsg.GetName(); ref != nil {
		return &ref.Name
	}
	return (*internet_quality_rating.Name)(nil)
}

func (h *DeleteInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*DeleteInternetQualityRatingRequest) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteInternetQualityRatingDescriptorClientMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteInternetQualityRatingRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*DeleteInternetQualityRatingRequest) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceName(*empty.Empty) *internet_quality_rating.Name
	})
	if ok {
		return override.OverrideExtractSubjectResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectResourceNames(*empty.Empty) []*internet_quality_rating.Name
	})
	if ok {
		return internet_quality_rating.InternetQualityRatingNameList(override.OverrideExtractSubjectResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteInternetQualityRatingDescriptorServerMsgHandle) ExtractSubjectCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractSubjectCollectionName(*empty.Empty) *internet_quality_rating.ParentName
	})
	if ok {
		return override.OverrideExtractSubjectCollectionName(typedMsg)
	}
	return nil
}

func GetDeleteInternetQualityRatingDescriptor() *DeleteInternetQualityRatingDescriptor {
	return deleteInternetQualityRatingDescriptor
}

type InternetQualityRatingServiceDescriptor struct{}

func (d *InternetQualityRatingServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getInternetQualityRatingDescriptor,
		batchGetInternetQualityRatingsDescriptor,
		listInternetQualityRatingsDescriptor,
		watchInternetQualityRatingDescriptor,
		watchInternetQualityRatingsDescriptor,
		createInternetQualityRatingDescriptor,
		updateInternetQualityRatingDescriptor,
		deleteInternetQualityRatingDescriptor,
	}
}

func (d *InternetQualityRatingServiceDescriptor) GetFullAPIName() string {
	return "/ntt.watchdog.v1alpha2.InternetQualityRatingService"
}

func (d *InternetQualityRatingServiceDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *InternetQualityRatingServiceDescriptor) GetApiName() string {
	return "InternetQualityRatingService"
}

func (d *InternetQualityRatingServiceDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *InternetQualityRatingServiceDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func GetInternetQualityRatingServiceDescriptor() *InternetQualityRatingServiceDescriptor {
	return internetQualityRatingServiceDescriptor
}

func initDescriptors() {
	internetQualityRatingServiceDescriptor = &InternetQualityRatingServiceDescriptor{}
	getInternetQualityRatingDescriptor = &GetInternetQualityRatingDescriptor{}
	batchGetInternetQualityRatingsDescriptor = &BatchGetInternetQualityRatingsDescriptor{}
	listInternetQualityRatingsDescriptor = &ListInternetQualityRatingsDescriptor{}
	watchInternetQualityRatingDescriptor = &WatchInternetQualityRatingDescriptor{}
	watchInternetQualityRatingsDescriptor = &WatchInternetQualityRatingsDescriptor{}
	createInternetQualityRatingDescriptor = &CreateInternetQualityRatingDescriptor{}
	updateInternetQualityRatingDescriptor = &UpdateInternetQualityRatingDescriptor{}
	deleteInternetQualityRatingDescriptor = &DeleteInternetQualityRatingDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(internetQualityRatingServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getInternetQualityRatingDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetInternetQualityRatingsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listInternetQualityRatingsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchInternetQualityRatingDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchInternetQualityRatingsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createInternetQualityRatingDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateInternetQualityRatingDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteInternetQualityRatingDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
