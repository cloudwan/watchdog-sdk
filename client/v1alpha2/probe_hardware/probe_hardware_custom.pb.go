// Code generated by protoc-gen-goten-go
// File: watchdog/proto/v1alpha2/probe_hardware_custom.proto
// DO NOT EDIT!!!

package probe_hardware_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	probe "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/probe"
	project "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/project"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &probe.Probe{}
	_ = &project.Project{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method
// [ProbeHardwareGet][ntt.watchdog.v1alpha2.ProbeHardwareGet]
type ProbeHardwareGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	ProbeName     *probe.Name `protobuf:"bytes,1,opt,customtype=Name,name=probe_name,json=probeName,proto3" json:"probe_name,omitempty" firestore:"probeName"`
	AccessToken   string      `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" firestore:"accessToken"`
}

func (m *ProbeHardwareGetRequest) Reset() {
	*m = ProbeHardwareGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProbeHardwareGetRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProbeHardwareGetRequest) ProtoMessage() {}

func (m *ProbeHardwareGetRequest) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProbeHardwareGetRequest) GotenMessage() {}

// Deprecated, Use ProbeHardwareGetRequest.ProtoReflect.Descriptor instead.
func (*ProbeHardwareGetRequest) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescGZIP(), []int{0}
}

func (m *ProbeHardwareGetRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProbeHardwareGetRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProbeHardwareGetRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProbeHardwareGetRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProbeHardwareGetRequest) GetProbeName() *probe.Name {
	if m != nil {
		return m.ProbeName
	}
	return nil
}

func (m *ProbeHardwareGetRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ProbeHardwareGetRequest) SetProbeName(fv *probe.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProbeName", "ProbeHardwareGetRequest"))
	}
	m.ProbeName = fv
}

func (m *ProbeHardwareGetRequest) SetAccessToken(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AccessToken", "ProbeHardwareGetRequest"))
	}
	m.AccessToken = fv
}

// Response message for method
// [ProbeHardwareGet][ntt.watchdog.v1alpha2.ProbeHardwareGet]
type ProbeHardwareGetResponse struct {
	state            protoimpl.MessageState
	sizeCache        protoimpl.SizeCache
	unknownFields    protoimpl.UnknownFields
	SerialNumber     string                                    `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty" firestore:"serialNumber"`
	ActivationStatus probe.Probe_Status_ActivationState_Status `protobuf:"varint,2,opt,name=activation_status,json=activationStatus,proto3,enum=ntt.watchdog.v1alpha2.Probe_Status_ActivationState_Status" json:"activation_status,omitempty" firestore:"activationStatus"`
	ConnectionStatus probe.Probe_Status_ConnectionStatus       `protobuf:"varint,3,opt,name=connection_status,json=connectionStatus,proto3,enum=ntt.watchdog.v1alpha2.Probe_Status_ConnectionStatus" json:"connection_status,omitempty" firestore:"connectionStatus"`
}

func (m *ProbeHardwareGetResponse) Reset() {
	*m = ProbeHardwareGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProbeHardwareGetResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProbeHardwareGetResponse) ProtoMessage() {}

func (m *ProbeHardwareGetResponse) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProbeHardwareGetResponse) GotenMessage() {}

// Deprecated, Use ProbeHardwareGetResponse.ProtoReflect.Descriptor instead.
func (*ProbeHardwareGetResponse) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescGZIP(), []int{1}
}

func (m *ProbeHardwareGetResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProbeHardwareGetResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProbeHardwareGetResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProbeHardwareGetResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProbeHardwareGetResponse) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *ProbeHardwareGetResponse) GetActivationStatus() probe.Probe_Status_ActivationState_Status {
	if m != nil {
		return m.ActivationStatus
	}
	return probe.Probe_Status_ActivationState_ACTIVATION_STATUS_UNSPECIFIED
}

func (m *ProbeHardwareGetResponse) GetConnectionStatus() probe.Probe_Status_ConnectionStatus {
	if m != nil {
		return m.ConnectionStatus
	}
	return probe.Probe_Status_CONNECTION_STATUS_UNSPECIFIED
}

func (m *ProbeHardwareGetResponse) SetSerialNumber(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SerialNumber", "ProbeHardwareGetResponse"))
	}
	m.SerialNumber = fv
}

func (m *ProbeHardwareGetResponse) SetActivationStatus(fv probe.Probe_Status_ActivationState_Status) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ActivationStatus", "ProbeHardwareGetResponse"))
	}
	m.ActivationStatus = fv
}

func (m *ProbeHardwareGetResponse) SetConnectionStatus(fv probe.Probe_Status_ConnectionStatus) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ConnectionStatus", "ProbeHardwareGetResponse"))
	}
	m.ConnectionStatus = fv
}

// Request message for method
// [ProbeHardwareUpdate][ntt.watchdog.v1alpha2.ProbeHardwareUpdate]
type ProbeHardwareUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	ProbeName     *probe.Name `protobuf:"bytes,1,opt,customtype=Name,name=probe_name,json=probeName,proto3" json:"probe_name,omitempty" firestore:"probeName"`
	SerialNumber  string      `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty" firestore:"serialNumber"`
	AccessToken   string      `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" firestore:"accessToken"`
}

func (m *ProbeHardwareUpdateRequest) Reset() {
	*m = ProbeHardwareUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProbeHardwareUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProbeHardwareUpdateRequest) ProtoMessage() {}

func (m *ProbeHardwareUpdateRequest) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProbeHardwareUpdateRequest) GotenMessage() {}

// Deprecated, Use ProbeHardwareUpdateRequest.ProtoReflect.Descriptor instead.
func (*ProbeHardwareUpdateRequest) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescGZIP(), []int{2}
}

func (m *ProbeHardwareUpdateRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProbeHardwareUpdateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProbeHardwareUpdateRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProbeHardwareUpdateRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProbeHardwareUpdateRequest) GetProbeName() *probe.Name {
	if m != nil {
		return m.ProbeName
	}
	return nil
}

func (m *ProbeHardwareUpdateRequest) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *ProbeHardwareUpdateRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ProbeHardwareUpdateRequest) SetProbeName(fv *probe.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProbeName", "ProbeHardwareUpdateRequest"))
	}
	m.ProbeName = fv
}

func (m *ProbeHardwareUpdateRequest) SetSerialNumber(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SerialNumber", "ProbeHardwareUpdateRequest"))
	}
	m.SerialNumber = fv
}

func (m *ProbeHardwareUpdateRequest) SetAccessToken(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AccessToken", "ProbeHardwareUpdateRequest"))
	}
	m.AccessToken = fv
}

// Response message for method
// [ProbeHardwareUpdate][ntt.watchdog.v1alpha2.ProbeHardwareUpdate]
type ProbeHardwareUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	SerialNumber  string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty" firestore:"serialNumber"`
}

func (m *ProbeHardwareUpdateResponse) Reset() {
	*m = ProbeHardwareUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProbeHardwareUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProbeHardwareUpdateResponse) ProtoMessage() {}

func (m *ProbeHardwareUpdateResponse) ProtoReflect() preflect.Message {
	mi := &watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProbeHardwareUpdateResponse) GotenMessage() {}

// Deprecated, Use ProbeHardwareUpdateResponse.ProtoReflect.Descriptor instead.
func (*ProbeHardwareUpdateResponse) Descriptor() ([]byte, []int) {
	return watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescGZIP(), []int{3}
}

func (m *ProbeHardwareUpdateResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProbeHardwareUpdateResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProbeHardwareUpdateResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProbeHardwareUpdateResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProbeHardwareUpdateResponse) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *ProbeHardwareUpdateResponse) SetSerialNumber(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SerialNumber", "ProbeHardwareUpdateResponse"))
	}
	m.SerialNumber = fv
}

var watchdog_proto_v1alpha2_probe_hardware_custom_proto preflect.FileDescriptor

var watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDesc = []byte{
	0x0a, 0x33, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x20, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65,
	0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6a, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xb2, 0xda, 0x21, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8b, 0x02, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x67,
	0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x61, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x1a, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xb2,
	0xda, 0x21, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x3a,
	0x04, 0xc2, 0x85, 0x2c, 0x00, 0x22, 0x42, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0xda, 0x01, 0xe8, 0xde, 0x21, 0x01,
	0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64,
	0x6f, 0x67, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x18,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x3b, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0xd2, 0x84, 0xd1,
	0x02, 0x44, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x12, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescOnce sync.Once
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescData = watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDesc
)

func watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescGZIP() []byte {
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescOnce.Do(func() {
		watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescData = protoimpl.X.CompressGZIP(watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescData)
	})
	return watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDescData
}

var watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var watchdog_proto_v1alpha2_probe_hardware_custom_proto_goTypes = []interface{}{
	(*ProbeHardwareGetRequest)(nil),                // 0: ntt.watchdog.v1alpha2.ProbeHardwareGetRequest
	(*ProbeHardwareGetResponse)(nil),               // 1: ntt.watchdog.v1alpha2.ProbeHardwareGetResponse
	(*ProbeHardwareUpdateRequest)(nil),             // 2: ntt.watchdog.v1alpha2.ProbeHardwareUpdateRequest
	(*ProbeHardwareUpdateResponse)(nil),            // 3: ntt.watchdog.v1alpha2.ProbeHardwareUpdateResponse
	(probe.Probe_Status_ActivationState_Status)(0), // 4: ntt.watchdog.v1alpha2.Probe_Status_ActivationState_Status
	(probe.Probe_Status_ConnectionStatus)(0),       // 5: ntt.watchdog.v1alpha2.Probe_Status_ConnectionStatus
}
var watchdog_proto_v1alpha2_probe_hardware_custom_proto_depIdxs = []int32{
	4, // 0: ntt.watchdog.v1alpha2.ProbeHardwareGetResponse.activation_status:type_name -> ntt.watchdog.v1alpha2.Probe_Status_ActivationState_Status
	5, // 1: ntt.watchdog.v1alpha2.ProbeHardwareGetResponse.connection_status:type_name -> ntt.watchdog.v1alpha2.Probe_Status_ConnectionStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { watchdog_proto_v1alpha2_probe_hardware_custom_proto_init() }
func watchdog_proto_v1alpha2_probe_hardware_custom_proto_init() {
	if watchdog_proto_v1alpha2_probe_hardware_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHardwareGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHardwareGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHardwareUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHardwareUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           watchdog_proto_v1alpha2_probe_hardware_custom_proto_goTypes,
		DependencyIndexes: watchdog_proto_v1alpha2_probe_hardware_custom_proto_depIdxs,
		MessageInfos:      watchdog_proto_v1alpha2_probe_hardware_custom_proto_msgTypes,
	}.Build()
	watchdog_proto_v1alpha2_probe_hardware_custom_proto = out.File
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_rawDesc = nil
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_goTypes = nil
	watchdog_proto_v1alpha2_probe_hardware_custom_proto_depIdxs = nil
}
