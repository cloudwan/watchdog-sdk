// Code generated by protoc-gen-goten-client
// API: AdminAreaService
// DO NOT EDIT!!!

package admin_area_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	admin_area "github.com/cloudwan/watchdog-sdk/resources/v1alpha2/admin_area"
	empty "github.com/golang/protobuf/ptypes/empty"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &empty.Empty{}
	_ = &admin_area.BBox{}
)

var (
	descriptorsInitialized       bool
	adminAreaServiceDescriptor   *AdminAreaServiceDescriptor
	getAdminAreaDescriptor       *GetAdminAreaDescriptor
	batchGetAdminAreasDescriptor *BatchGetAdminAreasDescriptor
	listAdminAreasDescriptor     *ListAdminAreasDescriptor
	watchAdminAreaDescriptor     *WatchAdminAreaDescriptor
	watchAdminAreasDescriptor    *WatchAdminAreasDescriptor
	createAdminAreaDescriptor    *CreateAdminAreaDescriptor
	updateAdminAreaDescriptor    *UpdateAdminAreaDescriptor
	deleteAdminAreaDescriptor    *DeleteAdminAreaDescriptor
)

type GetAdminAreaDescriptor struct{}

type GetAdminAreaDescriptorClientMsgHandle struct{}

type GetAdminAreaDescriptorServerMsgHandle struct{}

func (d *GetAdminAreaDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetAdminAreaRequest{}
}

func (d *GetAdminAreaDescriptor) NewEmptyServerMsg() proto.Message {
	return &admin_area.AdminArea{}
}

func (d *GetAdminAreaDescriptor) IsUnary() bool {
	return true
}

func (d *GetAdminAreaDescriptor) IsClientStream() bool {
	return false
}

func (d *GetAdminAreaDescriptor) IsServerStream() bool {
	return false
}

func (d *GetAdminAreaDescriptor) IsCollection() bool {
	return false
}

func (d *GetAdminAreaDescriptor) IsPlural() bool {
	return false
}

func (d *GetAdminAreaDescriptor) HasResource() bool {
	return true
}

func (d *GetAdminAreaDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetAdminAreaDescriptor) GetVerb() string {
	return "get"
}

func (d *GetAdminAreaDescriptor) GetMethodName() string {
	return "GetAdminArea"
}

func (d *GetAdminAreaDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/GetAdminArea"
}

func (d *GetAdminAreaDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *GetAdminAreaDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *GetAdminAreaDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *GetAdminAreaDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *GetAdminAreaDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *GetAdminAreaDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *GetAdminAreaDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetAdminAreaDescriptorClientMsgHandle{}
}

func (d *GetAdminAreaDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetAdminAreaDescriptorServerMsgHandle{}
}

func (h *GetAdminAreaDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetAdminAreaRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *GetAdminAreaDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetAdminAreaRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetAdminAreaDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *GetAdminAreaDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*admin_area.AdminArea) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *GetAdminAreaDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*admin_area.AdminArea) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetAdminAreaDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetGetAdminAreaDescriptor() *GetAdminAreaDescriptor {
	return getAdminAreaDescriptor
}

type BatchGetAdminAreasDescriptor struct{}

type BatchGetAdminAreasDescriptorClientMsgHandle struct{}

type BatchGetAdminAreasDescriptorServerMsgHandle struct{}

func (d *BatchGetAdminAreasDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetAdminAreasRequest{}
}

func (d *BatchGetAdminAreasDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetAdminAreasResponse{}
}

func (d *BatchGetAdminAreasDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetAdminAreasDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetAdminAreasDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetAdminAreasDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetAdminAreasDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetAdminAreasDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetAdminAreasDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetAdminAreasDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetAdminAreasDescriptor) GetMethodName() string {
	return "BatchGetAdminAreas"
}

func (d *BatchGetAdminAreasDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/BatchGetAdminAreas"
}

func (d *BatchGetAdminAreasDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *BatchGetAdminAreasDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *BatchGetAdminAreasDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *BatchGetAdminAreasDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *BatchGetAdminAreasDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *BatchGetAdminAreasDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *BatchGetAdminAreasDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetAdminAreasDescriptorClientMsgHandle{}
}

func (d *BatchGetAdminAreasDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetAdminAreasDescriptorServerMsgHandle{}
}

func (h *BatchGetAdminAreasDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetAdminAreasRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetAdminAreasDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetAdminAreasRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if refs := typedMsg.GetNames(); len(refs) > 0 {
			list := make(admin_area.AdminAreaNameList, 0, len(refs))
			for _, ref := range refs {
				list = append(list, &ref.Name)
			}
			return list
		}
	}
	return (admin_area.AdminAreaNameList)(nil)
}

func (h *BatchGetAdminAreasDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *BatchGetAdminAreasDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetAdminAreasResponse) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetAdminAreasDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetAdminAreasResponse) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetAdminAreas(); len(resources) > 0 {
			list := make(admin_area.AdminAreaNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (admin_area.AdminAreaNameList)(nil)
}

func (h *BatchGetAdminAreasDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetBatchGetAdminAreasDescriptor() *BatchGetAdminAreasDescriptor {
	return batchGetAdminAreasDescriptor
}

type ListAdminAreasDescriptor struct{}

type ListAdminAreasDescriptorClientMsgHandle struct{}

type ListAdminAreasDescriptorServerMsgHandle struct{}

func (d *ListAdminAreasDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListAdminAreasRequest{}
}

func (d *ListAdminAreasDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListAdminAreasResponse{}
}

func (d *ListAdminAreasDescriptor) IsUnary() bool {
	return true
}

func (d *ListAdminAreasDescriptor) IsClientStream() bool {
	return false
}

func (d *ListAdminAreasDescriptor) IsServerStream() bool {
	return false
}

func (d *ListAdminAreasDescriptor) IsCollection() bool {
	return true
}

func (d *ListAdminAreasDescriptor) IsPlural() bool {
	return true
}

func (d *ListAdminAreasDescriptor) HasResource() bool {
	return true
}

func (d *ListAdminAreasDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListAdminAreasDescriptor) GetVerb() string {
	return "list"
}

func (d *ListAdminAreasDescriptor) GetMethodName() string {
	return "ListAdminAreas"
}

func (d *ListAdminAreasDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/ListAdminAreas"
}

func (d *ListAdminAreasDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *ListAdminAreasDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *ListAdminAreasDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *ListAdminAreasDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *ListAdminAreasDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *ListAdminAreasDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *ListAdminAreasDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListAdminAreasDescriptorClientMsgHandle{}
}

func (d *ListAdminAreasDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListAdminAreasDescriptorServerMsgHandle{}
}

func (h *ListAdminAreasDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListAdminAreasRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListAdminAreasDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListAdminAreasRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListAdminAreasDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ListAdminAreasDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListAdminAreasResponse) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListAdminAreasDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListAdminAreasResponse) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetAdminAreas(); len(resources) > 0 {
			list := make(admin_area.AdminAreaNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (admin_area.AdminAreaNameList)(nil)
}

func (h *ListAdminAreasDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetListAdminAreasDescriptor() *ListAdminAreasDescriptor {
	return listAdminAreasDescriptor
}

type WatchAdminAreaDescriptor struct{}

type WatchAdminAreaDescriptorClientMsgHandle struct{}

type WatchAdminAreaDescriptorServerMsgHandle struct{}

func (d *WatchAdminAreaDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchAdminAreaRequest{}
}

func (d *WatchAdminAreaDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchAdminAreaResponse{}
}

func (d *WatchAdminAreaDescriptor) IsUnary() bool {
	return false
}

func (d *WatchAdminAreaDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchAdminAreaDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchAdminAreaDescriptor) IsCollection() bool {
	return false
}

func (d *WatchAdminAreaDescriptor) IsPlural() bool {
	return false
}

func (d *WatchAdminAreaDescriptor) HasResource() bool {
	return true
}

func (d *WatchAdminAreaDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchAdminAreaDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchAdminAreaDescriptor) GetMethodName() string {
	return "WatchAdminArea"
}

func (d *WatchAdminAreaDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/WatchAdminArea"
}

func (d *WatchAdminAreaDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *WatchAdminAreaDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *WatchAdminAreaDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *WatchAdminAreaDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchAdminAreaDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *WatchAdminAreaDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *WatchAdminAreaDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAdminAreaDescriptorClientMsgHandle{}
}

func (d *WatchAdminAreaDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAdminAreaDescriptorServerMsgHandle{}
}

func (h *WatchAdminAreaDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAdminAreaRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *WatchAdminAreaDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAdminAreaRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAdminAreaDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAdminAreaDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAdminAreaResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAdminAreaResponse) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *admin_area.AdminAreaChange_Added_:
				return tResChange.Added.GetAdminArea().GetName()
			case *admin_area.AdminAreaChange_Modified_:
				return tResChange.Modified.GetName()
			case *admin_area.AdminAreaChange_Removed_:
				return tResChange.Removed.GetName()
			case *admin_area.AdminAreaChange_Current_:
				return tResChange.Current.GetAdminArea().GetName()
			}
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *WatchAdminAreaDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAdminAreaResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAdminAreaResponse) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAdminAreaDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetWatchAdminAreaDescriptor() *WatchAdminAreaDescriptor {
	return watchAdminAreaDescriptor
}

type WatchAdminAreasDescriptor struct{}

type WatchAdminAreasDescriptorClientMsgHandle struct{}

type WatchAdminAreasDescriptorServerMsgHandle struct{}

func (d *WatchAdminAreasDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchAdminAreasRequest{}
}

func (d *WatchAdminAreasDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchAdminAreasResponse{}
}

func (d *WatchAdminAreasDescriptor) IsUnary() bool {
	return false
}

func (d *WatchAdminAreasDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchAdminAreasDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchAdminAreasDescriptor) IsCollection() bool {
	return true
}

func (d *WatchAdminAreasDescriptor) IsPlural() bool {
	return true
}

func (d *WatchAdminAreasDescriptor) HasResource() bool {
	return true
}

func (d *WatchAdminAreasDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchAdminAreasDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchAdminAreasDescriptor) GetMethodName() string {
	return "WatchAdminAreas"
}

func (d *WatchAdminAreasDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/WatchAdminAreas"
}

func (d *WatchAdminAreasDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *WatchAdminAreasDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *WatchAdminAreasDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *WatchAdminAreasDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchAdminAreasDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *WatchAdminAreasDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *WatchAdminAreasDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAdminAreasDescriptorClientMsgHandle{}
}

func (d *WatchAdminAreasDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAdminAreasDescriptorServerMsgHandle{}
}

func (h *WatchAdminAreasDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAdminAreasRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchAdminAreasDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAdminAreasRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAdminAreasRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAdminAreasDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAdminAreasDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAdminAreasResponse) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchAdminAreasDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAdminAreasResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAdminAreasResponse) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetAdminAreaChanges(); len(resChanges) > 0 {
			list := make(admin_area.AdminAreaNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *admin_area.AdminAreaChange_Added_:
					list = append(list, tResChange.Added.GetAdminArea().GetName())
				case *admin_area.AdminAreaChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *admin_area.AdminAreaChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *admin_area.AdminAreaChange_Current_:
					list = append(list, tResChange.Current.GetAdminArea().GetName())
				}
			}
			return list
		}
	}
	return (admin_area.AdminAreaNameList)(nil)
}

func (h *WatchAdminAreasDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetWatchAdminAreasDescriptor() *WatchAdminAreasDescriptor {
	return watchAdminAreasDescriptor
}

type CreateAdminAreaDescriptor struct{}

type CreateAdminAreaDescriptorClientMsgHandle struct{}

type CreateAdminAreaDescriptorServerMsgHandle struct{}

func (d *CreateAdminAreaDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateAdminAreaRequest{}
}

func (d *CreateAdminAreaDescriptor) NewEmptyServerMsg() proto.Message {
	return &admin_area.AdminArea{}
}

func (d *CreateAdminAreaDescriptor) IsUnary() bool {
	return true
}

func (d *CreateAdminAreaDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateAdminAreaDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateAdminAreaDescriptor) IsCollection() bool {
	return true
}

func (d *CreateAdminAreaDescriptor) IsPlural() bool {
	return false
}

func (d *CreateAdminAreaDescriptor) HasResource() bool {
	return true
}

func (d *CreateAdminAreaDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateAdminAreaDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateAdminAreaDescriptor) GetMethodName() string {
	return "CreateAdminArea"
}

func (d *CreateAdminAreaDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/CreateAdminArea"
}

func (d *CreateAdminAreaDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *CreateAdminAreaDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *CreateAdminAreaDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *CreateAdminAreaDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *CreateAdminAreaDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *CreateAdminAreaDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *CreateAdminAreaDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateAdminAreaDescriptorClientMsgHandle{}
}

func (d *CreateAdminAreaDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateAdminAreaDescriptorServerMsgHandle{}
}

func (h *CreateAdminAreaDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateAdminAreaRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetAdminArea()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *CreateAdminAreaDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateAdminAreaRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateAdminAreaDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateAdminAreaDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*admin_area.AdminArea) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *CreateAdminAreaDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*admin_area.AdminArea) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateAdminAreaDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetCreateAdminAreaDescriptor() *CreateAdminAreaDescriptor {
	return createAdminAreaDescriptor
}

type UpdateAdminAreaDescriptor struct{}

type UpdateAdminAreaDescriptorClientMsgHandle struct{}

type UpdateAdminAreaDescriptorServerMsgHandle struct{}

func (d *UpdateAdminAreaDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateAdminAreaRequest{}
}

func (d *UpdateAdminAreaDescriptor) NewEmptyServerMsg() proto.Message {
	return &admin_area.AdminArea{}
}

func (d *UpdateAdminAreaDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateAdminAreaDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateAdminAreaDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateAdminAreaDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateAdminAreaDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateAdminAreaDescriptor) HasResource() bool {
	return true
}

func (d *UpdateAdminAreaDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateAdminAreaDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateAdminAreaDescriptor) GetMethodName() string {
	return "UpdateAdminArea"
}

func (d *UpdateAdminAreaDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/UpdateAdminArea"
}

func (d *UpdateAdminAreaDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *UpdateAdminAreaDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *UpdateAdminAreaDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *UpdateAdminAreaDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *UpdateAdminAreaDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *UpdateAdminAreaDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *UpdateAdminAreaDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateAdminAreaDescriptorClientMsgHandle{}
}

func (d *UpdateAdminAreaDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateAdminAreaDescriptorServerMsgHandle{}
}

func (h *UpdateAdminAreaDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateAdminAreaRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetAdminArea()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *UpdateAdminAreaDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateAdminAreaRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateAdminAreaDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *UpdateAdminAreaDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*admin_area.AdminArea) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *UpdateAdminAreaDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*admin_area.AdminArea)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*admin_area.AdminArea) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateAdminAreaDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetUpdateAdminAreaDescriptor() *UpdateAdminAreaDescriptor {
	return updateAdminAreaDescriptor
}

type DeleteAdminAreaDescriptor struct{}

type DeleteAdminAreaDescriptorClientMsgHandle struct{}

type DeleteAdminAreaDescriptorServerMsgHandle struct{}

func (d *DeleteAdminAreaDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteAdminAreaRequest{}
}

func (d *DeleteAdminAreaDescriptor) NewEmptyServerMsg() proto.Message {
	return &empty.Empty{}
}

func (d *DeleteAdminAreaDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteAdminAreaDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteAdminAreaDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteAdminAreaDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteAdminAreaDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteAdminAreaDescriptor) HasResource() bool {
	return true
}

func (d *DeleteAdminAreaDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteAdminAreaDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteAdminAreaDescriptor) GetMethodName() string {
	return "DeleteAdminArea"
}

func (d *DeleteAdminAreaDescriptor) GetFullMethodName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService/DeleteAdminArea"
}

func (d *DeleteAdminAreaDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *DeleteAdminAreaDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *DeleteAdminAreaDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *DeleteAdminAreaDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *DeleteAdminAreaDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return adminAreaServiceDescriptor
}

func (d *DeleteAdminAreaDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return admin_area.GetDescriptor()
}

func (d *DeleteAdminAreaDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteAdminAreaDescriptorClientMsgHandle{}
}

func (d *DeleteAdminAreaDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteAdminAreaDescriptorServerMsgHandle{}
}

func (h *DeleteAdminAreaDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteAdminAreaRequest) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*admin_area.Name)(nil)
}

func (h *DeleteAdminAreaDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteAdminAreaRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteAdminAreaRequest) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteAdminAreaDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *DeleteAdminAreaDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*empty.Empty) *admin_area.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteAdminAreaDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*empty.Empty) []*admin_area.Name
	})
	if ok {
		return admin_area.AdminAreaNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteAdminAreaDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetDeleteAdminAreaDescriptor() *DeleteAdminAreaDescriptor {
	return deleteAdminAreaDescriptor
}

type AdminAreaServiceDescriptor struct{}

func (d *AdminAreaServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getAdminAreaDescriptor,
		batchGetAdminAreasDescriptor,
		listAdminAreasDescriptor,
		watchAdminAreaDescriptor,
		watchAdminAreasDescriptor,
		createAdminAreaDescriptor,
		updateAdminAreaDescriptor,
		deleteAdminAreaDescriptor,
	}
}

func (d *AdminAreaServiceDescriptor) GetFullAPIName() string {
	return "/ntt.watchdog.v1alpha2.AdminAreaService"
}

func (d *AdminAreaServiceDescriptor) GetProtoPkgName() string {
	return "ntt.watchdog.v1alpha2"
}

func (d *AdminAreaServiceDescriptor) GetApiName() string {
	return "AdminAreaService"
}

func (d *AdminAreaServiceDescriptor) GetServiceDomain() string {
	return "watchdog.edgelq.com"
}

func (d *AdminAreaServiceDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func GetAdminAreaServiceDescriptor() *AdminAreaServiceDescriptor {
	return adminAreaServiceDescriptor
}

func initDescriptors() {
	adminAreaServiceDescriptor = &AdminAreaServiceDescriptor{}
	getAdminAreaDescriptor = &GetAdminAreaDescriptor{}
	batchGetAdminAreasDescriptor = &BatchGetAdminAreasDescriptor{}
	listAdminAreasDescriptor = &ListAdminAreasDescriptor{}
	watchAdminAreaDescriptor = &WatchAdminAreaDescriptor{}
	watchAdminAreasDescriptor = &WatchAdminAreasDescriptor{}
	createAdminAreaDescriptor = &CreateAdminAreaDescriptor{}
	updateAdminAreaDescriptor = &UpdateAdminAreaDescriptor{}
	deleteAdminAreaDescriptor = &DeleteAdminAreaDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(adminAreaServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getAdminAreaDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetAdminAreasDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listAdminAreasDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchAdminAreaDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchAdminAreasDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createAdminAreaDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateAdminAreaDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteAdminAreaDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
